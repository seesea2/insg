{"version":3,"sources":["webpack:///./src/app/bus-arrival/home/home.component.html","webpack:///./src/app/bus-arrival/bus-arrival-routing.module.ts","webpack:///./src/app/bus-arrival/bus-arrival.module.ts","webpack:///./src/app/bus-arrival/bus-arrival.service.ts","webpack:///./src/app/bus-arrival/home/home.component.css","webpack:///./src/app/bus-arrival/home/home.component.ts"],"names":[],"mappings":"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","file":"bus-arrival-bus-arrival-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"container py-4\\\">\\r\\n  <h1>Bus Arrival Time</h1>\\r\\n  <h6>Get next bus arrival time by bus stop code.</h6>\\r\\n  <form class=\\\"py-4\\\">\\r\\n    <mat-form-field>\\r\\n      <mat-label>Bus Stop Code</mat-label>\\r\\n      <input matInput #busStopCode type=\\\"text\\\" />\\r\\n      <button\\r\\n        mat-raised-button\\r\\n        mat-stroked-button\\r\\n        matSuffix\\r\\n        color=\\\"primary\\\"\\r\\n        (click)=\\\"getBusArrival(busStopCode.value)\\\"\\r\\n      >\\r\\n        Get\\r\\n      </button>\\r\\n    </mat-form-field>\\r\\n  </form>\\r\\n  <div *ngIf=\\\"busTable.length > 0\\\">\\r\\n    <h4>{{ busStopInfo.Description }}</h4>\\r\\n    <table\\r\\n      mat-table\\r\\n      [dataSource]=\\\"busTable\\\"\\r\\n      width=\\\"100\\\"\\r\\n      class=\\\"mat-elevation-z8\\\"\\r\\n    >\\r\\n      <ng-container matColumnDef=\\\"service\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Service</th>\\r\\n        <td mat-cell *matCellDef=\\\"let bus\\\">{{ bus.service }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"bus1\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>1st-Bus</th>\\r\\n        <td mat-cell *matCellDef=\\\"let bus\\\">{{ bus.bus1 }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"bus2\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>2nd-Bus</th>\\r\\n        <td mat-cell *matCellDef=\\\"let bus\\\">{{ bus.bus2 }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"bus3\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>3rd-Bus</th>\\r\\n        <td mat-cell *matCellDef=\\\"let bus\\\">{{ bus.bus3 }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"load\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Load</th>\\r\\n        <td mat-cell *matCellDef=\\\"let bus\\\">{{ bus.load }}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"busTableColumn\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: busTableColumn\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!bExistingBookmark\\\"\\r\\n      mat-stroked-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"addBusStopBookmark()\\\"\\r\\n      class=\\\"my-3\\\"\\r\\n    >\\r\\n      Bookmark this Bus Stop\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"busStopBookmark\\\" class=\\\"py-4\\\">\\r\\n    <h3>Bus Stop Bookmark</h3>\\r\\n    <mat-action-list *ngFor=\\\"let busStop of busStopBookmark\\\" dense>\\r\\n      <div mat-list-item>\\r\\n        <button (click)=\\\"getBusArrival(busStop.BusStopCode)\\\">\\r\\n          {{ busStop.BusStopCode }} {{ busStop.Description }} @\\r\\n          {{ busStop.RoadName }}\\r\\n        </button>\\r\\n        <button (click)=\\\"deleteBusStopBookmark(busStop)\\\">x</button>\\r\\n      </div>\\r\\n    </mat-action-list>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BusArrivalRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { BusArrivalRoutingModule } from './bus-arrival-routing.module';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [SharedModule, BusArrivalRoutingModule]\n})\nexport class BusArrivalModule {}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\nimport { httpOptions } from '../core/http-interface';\r\nimport { BusArrivalReturn, BusStopInfo } from './bus-arrival-interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusArrivalService {\r\n  private busStopBookmarkSubject = new BehaviorSubject<BusStopInfo[]>([]);\r\n  busStopBookmark$ = this.busStopBookmarkSubject.asObservable();\r\n  busStopBookmark: BusStopInfo[];\r\n\r\n  constructor(\r\n    private cookieService: CookieService,\r\n    private httpClient: HttpClient\r\n  ) {\r\n    this.busStopBookmark$.subscribe(data => {\r\n      this.busStopBookmark = data;\r\n    });\r\n    this.getCookieBusStopBookmark();\r\n  }\r\n\r\n  getCookieBusStopBookmark() {\r\n    let cookie = this.cookieService.get('InSgBusStopBookmark');\r\n    if (cookie) {\r\n      this.busStopBookmarkSubject.next(JSON.parse(cookie));\r\n    }\r\n  }\r\n\r\n  getBusStopInfo(busStopCode: string) {\r\n    return this.httpClient.get<BusStopInfo>(\r\n      `/api/lta/bus/busStop/${busStopCode}`\r\n    );\r\n  }\r\n\r\n  getBusArrival(busStopCode: string): Observable<BusArrivalReturn> {\r\n    return this.httpClient.get<BusArrivalReturn>(\r\n      `/api/lta/bus/busArrival/${busStopCode}`\r\n    );\r\n  }\r\n\r\n  addBusStopBookmark(busStopInfo: BusStopInfo) {\r\n    if (this.existingBookmark(busStopInfo)) {\r\n      return;\r\n    }\r\n    this.busStopBookmark.push(busStopInfo);\r\n    this.busStopBookmarkSubject.next(this.busStopBookmark);\r\n    this.cookieService.set(\r\n      'InSgBusStopBookmark',\r\n      JSON.stringify(this.busStopBookmark),\r\n      365 * 10,\r\n      '/'\r\n    );\r\n  }\r\n\r\n  deleteBusStopBookmark(busStopInfo: BusStopInfo) {\r\n    let i = 0;\r\n    for (let i = 0; i < this.busStopBookmark.length; i++) {\r\n      if (this.busStopBookmark[i].BusStopCode === busStopInfo.BusStopCode) {\r\n        this.busStopBookmark.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n    this.busStopBookmarkSubject.next(this.busStopBookmark);\r\n    this.cookieService.set(\r\n      'InSgBusStopBookmark',\r\n      JSON.stringify(this.busStopBookmark),\r\n      365 * 10,\r\n      '/'\r\n    );\r\n  }\r\n\r\n  existingBookmark(busStopInfo: BusStopInfo) {\r\n    for (let i = 0; i < this.busStopBookmark.length; i++) {\r\n      if (busStopInfo.BusStopCode === this.busStopBookmark[i].BusStopCode) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYnVzLWFycml2YWwvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9idXMtYXJyaXZhbC9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { BusArrivalService } from '../bus-arrival.service';\r\nimport {\r\n  BusStopInfo,\r\n  BusTable,\r\n  NextBusData,\r\n  BusArrivalReturn\r\n} from '../bus-arrival-interface';\r\n\r\n@Component({\r\n  selector: 'bus-arrival-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  busTable: BusTable[];\r\n  busTableColumn: string[] = ['service', 'bus1', 'bus2', 'bus3', 'load'];\r\n  busStopBookmark: BusStopInfo[];\r\n  busStopInfo: BusStopInfo;\r\n  bExistingBookmark: boolean;\r\n\r\n  constructor(\r\n    private busArrivalService: BusArrivalService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    busArrivalService.busStopBookmark$.subscribe(data => {\r\n      this.busStopBookmark = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.busTable = [];\r\n    this.bExistingBookmark = false;\r\n\r\n    function positionCB(pos) {\r\n      console.log(pos);\r\n    }\r\n    function errorCB(err) {\r\n      console.log(err);\r\n    }\r\n    if (navigator && navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(positionCB, errorCB);\r\n    } else {\r\n      alert('navigator.geolocation is empty');\r\n    }\r\n  }\r\n\r\n  addBusStopBookmark() {\r\n    this.bExistingBookmark = true;\r\n    this.busArrivalService.addBusStopBookmark(this.busStopInfo);\r\n  }\r\n\r\n  deleteBusStopBookmark(busStop: string) {\r\n    this.bExistingBookmark = false;\r\n    this.busArrivalService.deleteBusStopBookmark(this.busStopInfo);\r\n  }\r\n\r\n  getBusArrival(busStopCode: string) {\r\n    this.busTable = [];\r\n    this.bExistingBookmark = false;\r\n\r\n    busStopCode = busStopCode.trim();\r\n    if (!busStopCode) {\r\n      this.snackBar.open('Invalid Bus Stop Code.', 'Error', { duration: 5000 });\r\n      return;\r\n    }\r\n    this.busArrivalService.getBusArrival(busStopCode).subscribe(\r\n      (data: BusArrivalReturn) => {\r\n        if (data.busArrival.Services.length <= 0) {\r\n          this.snackBar.open('Bus service unavailable at the Bus Stop.', '', {\r\n            duration: 5000\r\n          });\r\n          return;\r\n        }\r\n\r\n        data.busArrival.Services.forEach(service => {\r\n          let busRow: BusTable = {\r\n            service: service.ServiceNo,\r\n            bus1: calculateArrivalTime(service.NextBus),\r\n            bus2: calculateArrivalTime(service.NextBus2),\r\n            bus3: calculateArrivalTime(service.NextBus3),\r\n            load: service.NextBus.Load\r\n          };\r\n          this.busTable.push(busRow);\r\n        });\r\n\r\n        this.busStopInfo = data.busStopInfo;\r\n        this.bExistingBookmark = this.busArrivalService.existingBookmark(\r\n          data.busStopInfo\r\n        );\r\n      },\r\n      err => {\r\n        this.snackBar.open(err, 'Error', { duration: 5000 });\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateArrivalTime(bus: NextBusData) {\r\n  if (!bus || !bus.EstimatedArrival) {\r\n    return 'NA';\r\n  }\r\n\r\n  const date = new Date(bus.EstimatedArrival);\r\n  const diffMinutes = (date.valueOf() - Date.now()) / 1000 / 60;\r\n  if (diffMinutes < 1) {\r\n    return 'Arriving';\r\n  } else {\r\n    return diffMinutes.toFixed(0) + ' mins';\r\n  }\r\n}\r\n\r\nfunction getLoadDescription(loadType: string): string {\r\n  if (loadType === 'SEA') {\r\n    return 'Seats Available';\r\n  } else if (loadType === 'SDA') {\r\n    return 'Standing Available';\r\n  } else if (loadType === 'LSD') {\r\n    return 'Limited Standing';\r\n  }\r\n  return 'NA';\r\n}\r\n"],"sourceRoot":""}