{"version":3,"sources":["webpack:///./src/app/lunchfun/home/home.component.html","webpack:///./src/app/lunchfun/pals/pals.component.html","webpack:///./src/app/lunchfun/records/records.component.html","webpack:///./src/app/lunchfun/stats/stats.component.html","webpack:///./src/app/lunchfun/home/home.component.css","webpack:///./src/app/lunchfun/home/home.component.ts","webpack:///./src/app/lunchfun/lunchfun.module.ts","webpack:///./src/app/lunchfun/lunchfun.service.ts","webpack:///./src/app/lunchfun/pals/pals.component.css","webpack:///./src/app/lunchfun/pals/pals.component.ts","webpack:///./src/app/lunchfun/records/records.component.css","webpack:///./src/app/lunchfun/records/records.component.ts","webpack:///./src/app/lunchfun/stats/stats.component.css","webpack:///./src/app/lunchfun/stats/stats.component.ts"],"names":[],"mappings":"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","file":"lunchfun-lunchfun-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"container my-5\\\">\\r\\n  <h1>Lunch Fun</h1>\\r\\n\\r\\n  <lunchfun-pals></lunchfun-pals>\\r\\n\\r\\n  <lunchfun-stats></lunchfun-stats>\\r\\n\\r\\n  <lunchfun-records></lunchfun-records>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"<section class=\\\"mt-5\\\">\\r\\n  <h3>Datetime: {{ today }}</h3>\\r\\n  <section class=\\\"card-group mt-4\\\">\\r\\n    <mat-card class=\\\"col-6\\\">\\r\\n      <mat-card-title>Lunch Pals</mat-card-title>\\r\\n      <mat-card-content>\\r\\n        <mat-checkbox *ngFor=\\\"let pal of lunchPals; let i = index\\\" class=\\\"mr-3\\\" [(ngModel)]=\\\"palAttendCheckbox[i]\\\">\\r\\n          {{ pal.name }}\\r\\n        </mat-checkbox>\\r\\n        <mat-error *ngIf=\\\"lunchPalsErr\\\">{{lunchPalsErr}}</mat-error>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card class=\\\"col-6\\\">\\r\\n      <mat-card-title>Coffee Payer</mat-card-title>\\r\\n      <mat-card-content>\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Payer</mat-label>\\r\\n          <mat-select #payerSelect>\\r\\n            <mat-option *ngFor=\\\"let pal of lunchPals; let ind = index\\\" value=\\\"{{ ind }}\\\">{{ pal.name }}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <button mat-raised-button matSuffix color=\\\"primary\\\" (click)=\\\"addRecord(payerSelect.value)\\\" [disabled]=\\\"bAddingRecord\\\">\\r\\n            confirm\\r\\n          </button>\\r\\n      <mat-error *ngIf=\\\"addRecordErr\\\">{{ addRecordErr }}</mat-error>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  </section>\\r\\n</section>\\r\\n\"","module.exports = \"<section class=\\\"mt-5\\\">\\r\\n  <h2>Lunch Records</h2>\\r\\n  <div class=\\\"mt-4\\\">\\r\\n    <mat-error *ngIf=\\\"lunchRecordErr\\\">{{lunchRecordErr}}</mat-error>\\r\\n    <div *ngIf=\\\"!lunchRecordErr\\\" class=\\\"card-group\\\">\\r\\n      <mat-card *ngFor=\\\"let record of lunchRecords; trackBy: trackById\\\" class=\\\"col-sm-12 col-md-4 mb-3\\\">\\r\\n        <mat-card-title>{{ getLocalDate(record) }}</mat-card-title>\\r\\n        <mat-card-content>\\r\\n          <div><b>Attendees:</b> {{ record.attendees }}</div>\\r\\n          <div><b>Payer:</b> {{ record.payer }}</div>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions align=\\\"end\\\">\\r\\n          <button mat-button (click)=\\\"deleteRecord(record)\\\">\\r\\n            <i class=\\\"fa fa-trash\\\"></i>\\r\\n          </button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","module.exports = \"<section class=\\\"mt-5\\\">\\r\\n  <h2>Stats</h2>\\r\\n  <div class=\\\"mt-4\\\">\\r\\n    <mat-error *ngIf=\\\"lunchStatsErr\\\">{{lunchStatsErr}}</mat-error>\\r\\n    <div *ngIf=\\\"!lunchStatsErr\\\" class=\\\"card-group\\\">\\r\\n      <mat-card *ngFor=\\\"let item of lunchStats\\\" class=\\\"col-sm-12 col-md-4\\\">\\r\\n        <mat-card-title color=\\\"primary\\\">\\r\\n          <h4>{{item.name}}</h4>\\r\\n        </mat-card-title>\\r\\n        <mat-card-content>\\r\\n          <div><b>Attendance:</b> {{item.attendance}} times</div>\\r\\n          <!-- <div>Payment(S$): {{item.payment.toFixed(2)}}</div> -->\\r\\n          <!-- <div>\\r\\n            Payment(per attendance): {{(item.payment/item.attendance).toFixed(2)}}\\r\\n          </div> -->\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2x1bmNoZnVuL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lunchfun-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { PalsComponent } from './pals/pals.component';\r\nimport { RecordsComponent } from './records/records.component';\r\nimport { StatsComponent } from './stats/stats.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst routes: Routes = [{ path: '', component: HomeComponent }];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RecordsComponent,\r\n    StatsComponent,\r\n    PalsComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [SharedModule, RouterModule.forChild(routes)],\r\n  exports: [],\r\n  providers: []\r\n})\r\nexport class LunchfunModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { LunchRecord, LunchPal, LunchStats } from './lunchfun-interfaces';\r\nimport { httpOptions } from '../core/http-interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LunchfunService {\r\n  private refreshSubject = new Subject<boolean>();\r\n  refresh$ = this.refreshSubject.asObservable();\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  startRefresh() {\r\n    this.refreshSubject.next(true);\r\n  }\r\n\r\n  getPals(): Observable<LunchPal[]> {\r\n    return this.httpClient.get<LunchPal[]>('/api/lunchfun/pals');\r\n  }\r\n\r\n  getStats(): Observable<LunchStats[]> {\r\n    return this.httpClient.get<LunchStats[]>('/api/lunchfun/stats/attendance');\r\n  }\r\n\r\n  addRecord(params): Observable<any> {\r\n    return this.httpClient.post('/api/lunchfun/record', params, httpOptions);\r\n  }\r\n\r\n  getRecords(): Observable<LunchRecord[]> {\r\n    return this.httpClient.get<LunchRecord[]>(`/api/lunchfun/records`);\r\n  }\r\n\r\n  deleteRecord(lunchRecord: LunchRecord): Observable<any> {\r\n    const params = new HttpParams().set('_id', lunchRecord._id);\r\n    return this.httpClient.delete('/api/lunchfun/record', {\r\n      headers: new HttpHeaders().set('Content-Type', 'application/json'),\r\n      params: params\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2x1bmNoZnVuL3BhbHMvcGFscy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { LunchfunService } from '../lunchfun.service';\r\nimport { LunchPal } from '../lunchfun-interfaces';\r\n\r\n@Component({\r\n  selector: 'lunchfun-pals',\r\n  templateUrl: './pals.component.html',\r\n  styleUrls: ['./pals.component.css']\r\n})\r\nexport class PalsComponent implements OnInit {\r\n  today: string;\r\n  addRecordErr: string;\r\n  bAddingRecord: boolean;\r\n  lunchPals: LunchPal[];\r\n  lunchPalsErr: string;\r\n  palAttendCheckbox: boolean[];\r\n\r\n  constructor(private lunchfunService: LunchfunService) {}\r\n\r\n  ngOnInit() {\r\n    this.today = '';\r\n    this.addRecordErr = '';\r\n    this.bAddingRecord = false;\r\n    this.lunchPals = [];\r\n    this.lunchPalsErr = '';\r\n    this.palAttendCheckbox = [];\r\n\r\n    this.today = new Date().toLocaleString('en-SG');\r\n    setInterval(() => {\r\n      this.today = new Date().toLocaleString('en-SG');\r\n    }, 1000);\r\n    this.getPals();\r\n  }\r\n\r\n  getPals() {\r\n    this.lunchfunService.getPals().subscribe(\r\n      pals => {\r\n        this.lunchPalsErr = '';\r\n        this.lunchPals = pals;\r\n        pals.forEach(pal => {\r\n          this.palAttendCheckbox.push(true);\r\n        });\r\n      },\r\n      err => {\r\n        this.lunchPalsErr = err.error;\r\n      }\r\n    );\r\n  }\r\n\r\n  addRecord(payerSelect: number) {\r\n    if (!payerSelect) {\r\n      return (this.addRecordErr = 'Please select Payer.');\r\n    }\r\n    if (!this.palAttendCheckbox[payerSelect]) {\r\n      return (this.addRecordErr =\r\n        'Payer is not joining the lunch? Please review checkbox.');\r\n    }\r\n\r\n    this.bAddingRecord = true;\r\n    const attendees: string[] = [];\r\n    this.palAttendCheckbox.forEach((checkbox, ind) => {\r\n      if (checkbox) {\r\n        attendees.push(this.lunchPals[ind].name);\r\n      }\r\n    });\r\n\r\n    const params = {\r\n      payer: this.lunchPals[payerSelect].name,\r\n      attendees: attendees\r\n    };\r\n    this.lunchfunService.addRecord(params).subscribe(\r\n      data => {\r\n        this.addRecordErr = 'Done. Record added.';\r\n        this.lunchfunService.startRefresh();\r\n        setTimeout(() => {\r\n          this.addRecordErr = '';\r\n          this.bAddingRecord = false;\r\n        }, 1500);\r\n      },\r\n      err => {\r\n        this.addRecordErr = err;\r\n        this.bAddingRecord = false;\r\n      }\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2x1bmNoZnVuL3JlY29yZHMvcmVjb3Jkcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { LunchfunService } from '../lunchfun.service';\r\nimport { LunchRecord } from '../lunchfun-interfaces';\r\n\r\n@Component({\r\n  selector: 'lunchfun-records',\r\n  templateUrl: './records.component.html',\r\n  styleUrls: ['./records.component.css']\r\n})\r\nexport class RecordsComponent implements OnInit, OnDestroy {\r\n  lunchRecords: LunchRecord[];\r\n  lunchRecordErr: string;\r\n  subscription: Subscription;\r\n\r\n  constructor(private lunchfunService: LunchfunService) {\r\n    this.subscription = lunchfunService.refresh$.subscribe(b => {\r\n      this.getRecords();\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.lunchRecords = [];\r\n    this.lunchRecordErr = '';\r\n\r\n    this.getRecords();\r\n  }\r\n\r\n  getRecords() {\r\n    this.lunchfunService.getRecords().subscribe(\r\n      data => {\r\n        this.lunchRecordErr = '';\r\n        this.lunchRecords = data;\r\n      },\r\n      err => {\r\n        this.lunchRecordErr = err;\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteRecord(record: LunchRecord) {\r\n    this.lunchRecords = this.lunchRecords.filter(h => h !== record);\r\n    this.lunchfunService.deleteRecord(record).subscribe(\r\n      data => {\r\n        this.lunchRecordErr = '';\r\n        this.lunchfunService.startRefresh();\r\n      },\r\n      err => {\r\n        this.lunchRecordErr = err;\r\n      }\r\n    );\r\n  }\r\n\r\n  trackById(index: number, record: LunchRecord) {\r\n    return record._id;\r\n  }\r\n\r\n  getLocalDate(lunchRecord: LunchRecord) {\r\n    return new Date(lunchRecord.createdOn).toLocaleString('en-SG');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2x1bmNoZnVuL3N0YXRzL3N0YXRzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { LunchfunService } from '../lunchfun.service';\r\nimport { LunchStats } from '../lunchfun-interfaces';\r\n\r\n@Component({\r\n  selector: 'lunchfun-stats',\r\n  templateUrl: './stats.component.html',\r\n  styleUrls: ['./stats.component.css']\r\n})\r\nexport class StatsComponent implements OnInit, OnDestroy {\r\n  lunchStats: LunchStats[];\r\n  lunchStatsErr: string;\r\n  subscription: Subscription;\r\n\r\n  constructor(private lunchfunService: LunchfunService) {\r\n    this.subscription = lunchfunService.refresh$.subscribe(b => {\r\n      this.getStats();\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.lunchStats = [];\r\n    this.lunchStatsErr = '';\r\n\r\n    this.getStats();\r\n  }\r\n\r\n  getStats() {\r\n    this.lunchfunService.getStats().subscribe(\r\n      data => {\r\n        this.lunchStatsErr = '';\r\n        this.lunchStats = data;\r\n      },\r\n      err => {\r\n        this.lunchStatsErr = err;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n"],"sourceRoot":""}