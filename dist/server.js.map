{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"express\"","webpack:///external \"axios\"","webpack:///./server/db-ops/sqlite-ops.ts","webpack:///./server/mongodb-ops.ts","webpack:///external \"path\"","webpack:///./server/lta/lta.ts","webpack:///./server/lta/bus-stops.ts","webpack:///./server/gifts-products/gifts-products-inventory.ops.ts","webpack:///./server/gifts-users/gifts-users.ops.ts","webpack:///./server/string-ops/crypto.ts","webpack:///./server/string-ops/random.ts","webpack:///./server/server.ts","webpack:///external \"express-session\"","webpack:///external \"cors\"","webpack:///external \"body-parser\"","webpack:///./server/router/api-router.ts","webpack:///./server/router/lta.ts","webpack:///./server/lta/bus-arrival.ts","webpack:///./server/router/dictionary.ts","webpack:///./server/dictionary/dictionary.ts","webpack:///./server/router/gifts.ts","webpack:///./server/router/gifts-products.ts","webpack:///./server/gifts-products/gifts-products-categories.ops.ts","webpack:///external \"sqlite3\"","webpack:///./server/gifts-products/gifts-products.ops.ts","webpack:///external \"mongodb\"","webpack:///./server/router/gifts-orders.ts","webpack:///./server/router/gifts-users.ts","webpack:///external \"crypto\"","webpack:///./server/gifts-users/gifts-carts.ops.ts","webpack:///./server/gifts-orders/gifts-orders.ops.ts","webpack:///./server/router/gifts-staffs.ts","webpack:///./server/gifts-staffs/staff-administrator.ts","webpack:///./server/router/http-request.ts","webpack:///./server/http-request/http-request.ts","webpack:///./server/email/email.ops.ts","webpack:///external \"nodemailer\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","DB","join","__dirname","sqlite3","verbose","db_r","undefined","db_rw","SqliteGet","sql","Promise","resolve","reject","Database","OPEN_READONLY","err","row","e","SqliteAll","all","rows","SqliteRun","OPEN_READWRITE","run","SqlitePrepareRun","params","serialize","stmt","prepare","length","finalize","ObjectID","database","MONGO_URL","InitDb","MongoClient","connect","useNewUrlParser","client","db","MongoDb","DbCollection","collection","busArrivalUrl","busStopsUrl","headerConfig","headers","AccountKey","busStops","getBusStopsFromLta","skip","url","response","status","data","checkBusStopLocally","busStopCode","BusStopCode","getAllBusStops","newBusStops","temp","concat","getBusStopInfo","res","send","busStopInfo","getNearbyBusStops","latitude","longitude","nearbyStops","dLat","Latitude","Math","PI","dLong","Longitude","a","sin","cos","dist","atan2","sqrt","abs","push","GetInventory","find","toArray","inventory","message","AdjustInventory","_id","qty","updateOne","$set","modifiedOn","Date","upsert","rslt","ReserveInventory","id","cartItems","success","failed","dbInventory","product","$gte","$inc","$push","reservations","createdOn","result","nModified","$pull","DeleteInventoryReservation","updateRslt","console","log","bLogin","session","staff","user","Login","req","uid","bStaff","body","pwd","encrypt","Logout","Register","email","values","now","DeleteUser","UserInfo","algorithm","crypto","scryptSync","iv","Buffer","alloc","text","cipher","createCipheriv","crypted","update","final","decrypt","decipher","createDecipheriv","dec","RandomTypes","random","type","rString","String","Number","Capital","floor","randomNumber","randomCapitals","randomString","app","express","use","cors","bodyParser","json","urlencoded","extended","secret","resave","saveUninitialized","cookie","maxAge","sendFile","static","dotfiles","next","listen","apiRouter","Router","busRouter","post","query","trim","then","respose","busArrival","catch","dictionaryRouter","word","config","app_id","app_key","toLowerCase","resp","entries","return_result","lexicalEntries","results","lexicalEntry","new_lexicalEntry","lexicalCategory","pronunciations","entry","senses","sense","definitions","definition","subsenses","subsense","pronunciation","audioFile","phoneticSpelling","giftsRouter","giftsProductsRouter","GetProduct","GetCategories","AddCategory","put","UpdateCategory","delete","DeleteCategory","GetSamplesOfCategories","GetProductsByCategory","AddProduct","UpdateProduct","DeleteProduct","globalCategories","globalSamplesOfCategories","parent","category","org","newName","sql1","children","forEach","child","level","returnCategories","cat","match","RegExp","GetCategoriesByLevel","ind","lastIndexOf","substring","lenght","products","price","colour","img","packaging","note","material","retailer","getTime","changes","size","giftsOrdersRouter","sendStatus","new_status","sno","order_no","includes","mobile","company","mobile2","addr","new_sale_price","new_qty","giftsUsersRouter","GetCart","AddToCart","DeleteCart","UpdateCartQty","DeleteInCart","CartCheckout","findOne","cart","productId","quantity","deleteOne","customer","address","total","bMember","NewOrder","orderId","error","dbOrders","insertRslt","insertOne","created_on","shipping","payment","method","transaction_id","giftsStaffsRouter","newStaff","firstName","lastName","httpRouter","Delete","Get","Post","Put","querys","queryValue","transporter","createTransport","host","secure","auth","pass","mailOptions","from","to","subject","html","sendMail"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = require(\"express\");","module.exports = require(\"axios\");","import { join } from 'path';\r\nimport { Database, OPEN_READONLY, OPEN_READWRITE, verbose } from 'sqlite3';\r\n\r\n// const DB = './info.xyz';\r\nconst DB = join(__dirname, '/info.xyz');\r\n\r\nlet sqlite3 = verbose();\r\nlet db_r = undefined;\r\nlet db_rw = undefined;\r\n\r\nfunction SqliteGet(sql: string): Promise<any> {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      if (!db_r) {\r\n        db_r = new sqlite3.Database(DB, OPEN_READONLY);\r\n      }\r\n      db_r.get(sql, (err, row) => {\r\n        if (err) {\r\n          return reject(err);\r\n        }\r\n        resolve(row);\r\n      });\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n}\r\n\r\nfunction SqliteAll(sql: string): Promise<any[]> {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      if (!db_r) {\r\n        db_r = new Database(DB, OPEN_READONLY);\r\n      }\r\n      db_r.all(sql, (err, rows) => {\r\n        if (err) {\r\n          return reject(err);\r\n        }\r\n        resolve(rows);\r\n      });\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n}\r\n\r\nfunction SqliteRun(sql): Promise<boolean> {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      if (!db_rw) {\r\n        db_rw = new Database(DB, OPEN_READWRITE);\r\n      }\r\n      db_rw.run(sql, [], err => {\r\n        if (err) {\r\n          return reject(err);\r\n        }\r\n        resolve(true);\r\n      });\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n}\r\n\r\nfunction SqlitePrepareRun(sql, params): Promise<boolean> {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      if (!db_rw) {\r\n        db_rw = new Database(DB, OPEN_READWRITE);\r\n      }\r\n      db_rw.serialize(() => {\r\n        const stmt = db_rw.prepare(sql, err => {\r\n          if (err) {\r\n            return reject(err);\r\n          }\r\n        });\r\n        for (let i = 0; i < params.length; i++) {\r\n          stmt.run(params[i]);\r\n        }\r\n        stmt.finalize(err => {\r\n          if (err) {\r\n            return reject(err);\r\n          }\r\n          resolve(true);\r\n        });\r\n      });\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n}\r\n\r\nexport { SqliteAll, SqliteGet, SqlitePrepareRun, SqliteRun };\r\n","import { MongoClient, Db, ObjectID } from 'mongodb';\r\n\r\nconst MONGO_URL =\r\n  'mongodb+srv://admin:admin@cluster0-dxwkg.mongodb.net/insg?retryWrites=true';\r\n\r\nlet database: Db;\r\n\r\nasync function InitDb(): Promise<Db> {\r\n  try {\r\n    const client = await MongoClient.connect(MONGO_URL, {\r\n      useNewUrlParser: true\r\n    });\r\n    return (database = client.db('insg'));\r\n  } catch (e) {\r\n    throw 'Database connection failed.';\r\n  }\r\n}\r\n\r\nasync function MongoDb(): Promise<Db> {\r\n  if (database) {\r\n    return database;\r\n  }\r\n\r\n  try {\r\n    await InitDb();\r\n    return database;\r\n  } catch (e) {\r\n    throw e;\r\n  }\r\n}\r\n\r\nasync function DbCollection(name: string) {\r\n  if (database) {\r\n    return database.collection(name);\r\n  }\r\n\r\n  try {\r\n    await InitDb();\r\n    return database.collection(name);\r\n  } catch (e) {\r\n    throw e;\r\n  }\r\n}\r\n\r\nexport { DbCollection, MongoDb, ObjectID };\r\n","module.exports = require(\"path\");","const ltaAccountKey = '6sVzf9zXRaCgkJUdjxIw2A==';\r\n\r\nconst busArrivalUrl =\r\n  'http://datamall2.mytransport.sg/ltaodataservice/BusArrivalv2';\r\nconst busStopsUrl = 'http://datamall2.mytransport.sg/ltaodataservice/BusStops';\r\n\r\nconst headerConfig = {\r\n  headers: {\r\n    AccountKey: ltaAccountKey\r\n  }\r\n};\r\n\r\nexport { busArrivalUrl, busStopsUrl, headerConfig };\r\n","import Axios from 'axios';\r\n\r\nimport { Response } from '../interface';\r\nimport { busStopsUrl, headerConfig } from './lta';\r\nimport { BusStopInfo } from './bus-stops-interface';\r\n\r\nlet busStops: BusStopInfo[] = [];\r\n\r\nasync function getBusStopsFromLta(skip?: number): Promise<BusStopInfo[]> {\r\n  try {\r\n    let url = busStopsUrl;\r\n    if (skip) {\r\n      url += `?$skip=${skip}`;\r\n    }\r\n    let response = await Axios.get(url, headerConfig);\r\n    if (response.status != 200) {\r\n      throw { status: response.status };\r\n    }\r\n    return response.data.value;\r\n  } catch (e) {\r\n    throw e;\r\n  }\r\n}\r\n\r\nasync function getAllBusStops() {\r\n  try {\r\n    let skip = 0;\r\n    let newBusStops: BusStopInfo[] = [];\r\n    do {\r\n      newBusStops = await getBusStopsFromLta(skip);\r\n      let temp = busStops;\r\n      busStops = temp.concat(newBusStops);\r\n      skip += 500;\r\n    } while (newBusStops.length === 500);\r\n  } catch (e) {\r\n    busStops = [];\r\n    getAllBusStops();\r\n  }\r\n}\r\ngetAllBusStops();\r\n\r\nfunction checkBusStopLocally(busStopCode: string) {\r\n  if (!busStopCode) {\r\n    return;\r\n  }\r\n  for (let i = 0; i < busStops.length; i++) {\r\n    if (busStopCode === busStops[i].BusStopCode) {\r\n      return busStops[i];\r\n    }\r\n  }\r\n  return;\r\n}\r\n\r\nfunction getBusStopInfo(busStopCode: string, res: Response) {\r\n  if (!busStopCode) {\r\n    return res.status(400).send('Invalid Bus Stop Code.');\r\n  }\r\n  let busStopInfo = checkBusStopLocally(busStopCode);\r\n  if (busStopInfo) {\r\n    return res.status(200).send(busStopInfo);\r\n  }\r\n  return res.status(400).send('Bus Stop Info not found.');\r\n}\r\n\r\nfunction getNearbyBusStops(latitude: number, longitude: number, res: Response) {\r\n  if (latitude === undefined || longitude === undefined) {\r\n    return res.status(400).send('Invalid coordinates.');\r\n  }\r\n\r\n  let nearbyStops = [];\r\n  const R = 6371e3;\r\n  for (let i = 0; i < busStops.length; i++) {\r\n    let dLat = ((busStops[i].Latitude - latitude) * Math.PI) / 180;\r\n    let dLong = ((busStops[i].Longitude - longitude) * Math.PI) / 180;\r\n\r\n    let a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos((busStops[i].Latitude * Math.PI) / 180) *\r\n        Math.cos((latitude * Math.PI) / 180) *\r\n        Math.sin(dLong / 2) *\r\n        Math.sin(dLong / 2);\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    let dist = R * c;\r\n    if (Math.abs(dist) < 280) {\r\n      nearbyStops.push(busStops[i]);\r\n    }\r\n  }\r\n  res.status(200).send(nearbyStops);\r\n}\r\n\r\nexport { busStops, checkBusStopLocally, getBusStopInfo, getNearbyBusStops };\r\n","import { Response } from '../interface';\r\nimport { DbCollection, ObjectID } from '../mongodb-ops';\r\n\r\nasync function GetInventory(res: Response) {\r\n  try {\r\n    const dbInventory = await DbCollection('gifts-inventory');\r\n    const inventory = await dbInventory.find().toArray();\r\n    return res.status(200).send(inventory);\r\n  } catch (e) {\r\n    return res.status(500).send(e.message);\r\n  }\r\n}\r\n\r\n// qty by product; Todo: by colour, size, etc.\r\nasync function AdjustInventory(_id: string, qty: number, res: Response) {\r\n  if (!_id || !qty) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n  try {\r\n    const dbInventory = await DbCollection('gifts-inventory');\r\n    const rslt = await dbInventory.updateOne(\r\n      {\r\n        _id: new ObjectID(_id)\r\n      },\r\n      { $set: { modifiedOn: new Date(), qty: qty } },\r\n      { upsert: true }\r\n    );\r\n    return res.status(200).send(rslt);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function ReserveInventory(id: string, cartItems: any) {\r\n  if (!cartItems || cartItems.length <= 0) {\r\n    throw 'The cart is empty.';\r\n  }\r\n\r\n  try {\r\n    const success = [];\r\n    const failed = [];\r\n\r\n    const dbInventory = await DbCollection('gifts-inventory');\r\n    for (let i = 0; i < cartItems.length; i++) {\r\n      const result = await dbInventory.updateOne(\r\n        {\r\n          _id: new ObjectID(cartItems[i].product._id),\r\n          qty: { $gte: cartItems[i].qty }\r\n        },\r\n        {\r\n          $inc: { qty: -cartItems[i].qty },\r\n          $push: {\r\n            reservations: {\r\n              qty: cartItems[i].qty,\r\n              _id: new ObjectID(id),\r\n              createdOn: new Date()\r\n            }\r\n          }\r\n        }\r\n      );\r\n      if (result.result.nModified === 0) {\r\n        failed.push(cartItems[i].product);\r\n        break;\r\n      } else {\r\n        success.push(cartItems[i].product);\r\n      }\r\n    }\r\n\r\n    if (failed.length > 0) {\r\n      for (let i = 0; i < success.length; i++) {\r\n        dbInventory.updateOne(\r\n          {\r\n            _id: success[i]._id,\r\n            'reservations._id': id\r\n          },\r\n          {\r\n            $inc: { qty: success[i].qty },\r\n            $pull: { reservations: { _id: id } }\r\n          }\r\n        );\r\n      }\r\n      throw 'Not enough storage.';\r\n    }\r\n    return 'Success.';\r\n  } catch (e) {\r\n    throw e;\r\n  }\r\n}\r\n\r\nasync function DeleteInventoryReservation(_id: string) {\r\n  try {\r\n    const dbInventory = await DbCollection('gifts-inventory');\r\n    let updateRslt = await dbInventory.updateOne(\r\n      {\r\n        'reservations._id': new ObjectID(_id)\r\n      },\r\n      {\r\n        $pull: { reservations: { _id: new ObjectID(_id) } }\r\n      }\r\n    );\r\n    if (updateRslt.result.nModified <= 0) {\r\n      throw 'delete reservation failed.';\r\n    }\r\n    return updateRslt;\r\n  } catch (e) {\r\n    console.log(e);\r\n    throw 'delete reservation failed with exception.';\r\n  }\r\n}\r\n\r\nexport {\r\n  AdjustInventory,\r\n  DeleteInventoryReservation,\r\n  GetInventory,\r\n  ReserveInventory\r\n};\r\n","// import { DbCollection, MongoDb, ObjectID } from '../mongodb-ops';\r\nimport { SqliteGet, SqliteAll, SqliteRun } from '../db-ops/sqlite-ops';\r\n\r\nimport { Request, Response } from '../interface';\r\nimport { encrypt } from '../string-ops/crypto';\r\n\r\nasync function Login(req: Request, res: Response) {\r\n  if (req.session && req.session.staff) {\r\n    return res.status(200).send({ uid: req.session.staff.uid, bStaff: true });\r\n  }\r\n  if (req.session && req.session.user) {\r\n    return res.status(200).send({ uid: req.session.user.uid });\r\n  }\r\n  try {\r\n    const uid = req.body.uid;\r\n    const pwd = encrypt(req.body.pwd);\r\n    req.session.staff = await SqliteGet(\r\n      `select * from giftsStaffs where uid=\"${uid}\" and pwd=\"${pwd}\"`\r\n    );\r\n    if (req.session.staff) {\r\n      return res.status(200).send({ uid: req.session.staff.uid, bStaff: true });\r\n    }\r\n\r\n    req.session.user = await SqliteGet(\r\n      `select * from giftsUsers where uid=\"${uid}\" and pwd=\"${pwd}\"`\r\n    );\r\n    if (req.session.user) {\r\n      return res.status(200).send({ uid: req.session.user.uid });\r\n    }\r\n    return res.status(403).send('Incorrect username or password');\r\n  } catch (e) {\r\n    console.log(e);\r\n    return res.status(500).send('server error.');\r\n  }\r\n}\r\n\r\nfunction Logout(req: Request, res: Response) {\r\n  if (req.session && req.session.staff) {\r\n    req.session.staff = null;\r\n  }\r\n  if (req.session && req.session.user) {\r\n    req.session.user = null;\r\n  }\r\n  return res.status(200).send({ result: 'ok' });\r\n}\r\n\r\nasync function Register(body: any, res: Response) {\r\n  if (!body.email || !body.pwd) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n  try {\r\n    let fields = 'email,pwd,createdOn';\r\n    let values = `\"${body.email}\",\"` + encrypt(body.pwd) + '\",' + Date.now();\r\n    let rslt = await SqliteRun(\r\n      `insert into giftsUsers (${fields}) values (${values})`\r\n    );\r\n    if (rslt) {\r\n      return res.status(200).send({ result: 'ok' });\r\n    }\r\n    return res.status(500).send('Register failed. Please try again later.');\r\n  } catch (e) {\r\n    return res.status(500).send('Register failed. Please try again later.');\r\n  }\r\n}\r\n\r\nasync function DeleteUser(session: any, res: Response) {\r\n  if (!session || !session.user) {\r\n    return res.status(403).send('Login is required.');\r\n  }\r\n  try {\r\n    SqliteRun(`delete from giftsUsers where uid=\"${session.user.uid}\"`);\r\n    session.user = null;\r\n    return res.status(200).send({ result: 'User deleted.' });\r\n  } catch (e) {\r\n    return res.status(400).send(e);\r\n  }\r\n}\r\n\r\nfunction UserInfo(session: any, res: Response) {\r\n  if (!bLogin(session)) {\r\n    return res.status(403).send('User not login.');\r\n  }\r\n  return res.status(200).send({\r\n    uid: session.user.uid,\r\n    email: session.user.email\r\n  });\r\n}\r\n\r\nfunction bLogin(session: any) {\r\n  if (session) {\r\n    if (session.staff) {\r\n      return true;\r\n    }\r\n    if (session.user) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport { bLogin, Login, Logout, Register, DeleteUser, UserInfo };\r\n","import * as crypto from 'crypto';\r\n\r\nconst algorithm = 'aes-192-cbc';\r\nconst password = 'inSGyc83';\r\nconst key = crypto.scryptSync(password, 'salt', 24);\r\nconst iv = Buffer.alloc(16, 0);\r\n\r\nfunction encrypt(text: string): string {\r\n  try {\r\n    let cipher = crypto.createCipheriv(algorithm, key, iv);\r\n    let crypted: string = cipher.update(text, 'utf8', 'hex');\r\n    crypted += cipher.final('hex');\r\n    return crypted;\r\n  } catch (e) {\r\n    // console.log('encrypt => ', e);\r\n  }\r\n}\r\n\r\nfunction decrypt(text: string): string {\r\n  try {\r\n    let decipher = crypto.createDecipheriv(algorithm, key, iv);\r\n    let dec: string = decipher.update(text, 'hex', 'utf8');\r\n    dec += decipher.final('utf8');\r\n    return dec;\r\n  } catch (e) {\r\n    // console.log('decrypt => ', e);\r\n  }\r\n}\r\n\r\nexport { encrypt, decrypt };\r\n","/*\r\n * string operation\r\n */\r\nenum RandomTypes {\r\n  Capital,\r\n  Number,\r\n  String\r\n}\r\n\r\n// return string of random numbers with specified length.\r\nfunction randomNumber(length: number): string {\r\n  return random(RandomTypes.Number, length);\r\n}\r\n\r\n// return string of random capital characters with specified length.\r\nfunction randomCapitals(length: number): string {\r\n  return random(RandomTypes.Capital, length);\r\n}\r\n\r\n// return string of random characters or numbers with specified length.\r\nfunction randomString(length: number): string {\r\n  return random(RandomTypes.String, length);\r\n}\r\n\r\nfunction random(type: RandomTypes, length: number): string {\r\n  let rString: string = '';\r\n  switch (type) {\r\n    case RandomTypes.String: {\r\n      rString =\r\n        'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n      break;\r\n    }\r\n    case RandomTypes.Number: {\r\n      rString = '0123456789';\r\n      break;\r\n    }\r\n    case RandomTypes.Capital: {\r\n      rString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n      break;\r\n    }\r\n    default: {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  let result: string = '';\r\n  for (let i = length; i > 0; --i) {\r\n    result += rString[Math.floor(Math.random() * rString.length)];\r\n  }\r\n  return result;\r\n}\r\n\r\nexport { randomCapitals, randomNumber, randomString };\r\n","import * as express from 'express';\r\nimport * as session from 'express-session';\r\nimport { join } from 'path';\r\nimport * as cors from 'cors';\r\nimport * as bodyParser from 'body-parser';\r\n\r\nimport { Request, Response, NextFunction } from './interface';\r\nimport apiRouter from './router/api-router';\r\nimport { randomString } from './string-ops/random';\r\n\r\n// Express server\r\nconst app = express();\r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\n\r\napp.use(\r\n  session({\r\n    secret: randomString(20),\r\n    resave: false,\r\n    saveUninitialized: true,\r\n    cookie: {\r\n      maxAge: 1000 * 60 * 60 * 24 // millseconds of 24hrs  }\r\n    }\r\n  })\r\n);\r\n\r\napp.use('/api', apiRouter);\r\n\r\napp.get('/', (req: Request, res: Response) => {\r\n  return res.status(200).sendFile(join(__dirname, '/client/index.html'));\r\n});\r\n\r\n// Server static files from /client\r\napp.use(express.static(join(__dirname, '/client')));\r\napp.use(\r\n  express.static(join(__dirname, '/client/assets'), { dotfiles: 'allow' })\r\n);\r\n\r\n// error handling - 1\r\napp.all('/*', (req: Request, res: Response) => {\r\n  return res.status(200).sendFile(join(__dirname, '/client/index.html'));\r\n});\r\n// error handling - 2\r\napp.use((req: Request, res: Response, next: NextFunction) => {\r\n  return res.status(500).send('Issue happened. Please retry later!');\r\n});\r\n\r\napp.listen(8080, () => {\r\n  console.log('App listening on port 8080.');\r\n});\r\n","module.exports = require(\"express-session\");","module.exports = require(\"cors\");","module.exports = require(\"body-parser\");","import { Router } from 'express';\r\nimport { Request, Response } from '../interface';\r\n\r\nimport { busRouter } from './lta';\r\nimport dictionaryRouter from './dictionary';\r\nimport giftsRouter from './gifts';\r\nimport httpRouter from './http-request';\r\nimport SendEmail from '../email/email.ops';\r\n\r\nconst apiRouter = Router();\r\n\r\n// url: /api\r\napiRouter.use('/lta/bus', busRouter);\r\napiRouter.use('/dictionary', dictionaryRouter);\r\napiRouter.use('/gifts', giftsRouter);\r\napiRouter.use('/http', httpRouter);\r\n\r\n// msg from users; forward it via nodemailer.\r\napiRouter.post('/msg', (req: Request, res: Response) => {\r\n  SendEmail(req.body, res);\r\n});\r\n\r\n// error handling\r\napiRouter.all('/*', (req: Request, res: Response) => {\r\n  return res.status(400).send('Invalid Request');\r\n});\r\n\r\nexport default apiRouter;\r\n","import { Router } from 'express';\r\n\r\nimport { Request, Response } from '../interface';\r\nimport getBusArrival from '../lta/bus-arrival';\r\nimport { getBusStopInfo, getNearbyBusStops } from '../lta/bus-stops';\r\n\r\n// url: /api/lta/bus\r\nconst busRouter = Router();\r\n\r\nbusRouter.get('/busArrival/:busStopCode', (req: Request, res: Response) => {\r\n  getBusArrival(req.params.busStopCode, res);\r\n});\r\n\r\nbusRouter.get('/busStop/:busStopCode', (req: Request, res: Response) => {\r\n  getBusStopInfo(req.params.busStopCode, res);\r\n});\r\n\r\nbusRouter.get('/nearbyBusStops', (req: Request, res: Response) => {\r\n  getNearbyBusStops(req.query.latitude, req.query.longitude, res);\r\n});\r\n\r\nexport { busRouter };\r\n","import Axios from 'axios';\r\n\r\nimport { Response } from '../interface';\r\nimport { busArrivalUrl, headerConfig } from './lta';\r\nimport { checkBusStopLocally } from './bus-stops';\r\n\r\nfunction getBusArrival(busStopCode: string, res: Response) {\r\n  busStopCode = busStopCode.trim();\r\n  if (!busStopCode) {\r\n    return res.status(400).send('Invalid BusStopCode.');\r\n  }\r\n\r\n  let busStopInfo = checkBusStopLocally(busStopCode);\r\n  if (!busStopInfo) {\r\n    return res.status(400).send('Bus Stop not found.');\r\n  }\r\n\r\n  let url = `${busArrivalUrl}?BusStopCode=${busStopCode}`;\r\n  Axios.get(url, headerConfig)\r\n    .then(respose => {\r\n      res\r\n        .status(200)\r\n        .send({ busStopInfo: busStopInfo, busArrival: respose.data });\r\n    })\r\n    .catch(e => {\r\n      res.status(400).send(e);\r\n    });\r\n}\r\n\r\nexport default getBusArrival;\r\n","import { Router } from 'express';\r\n\r\nimport { Request, Response } from '../interface';\r\nimport CheckOxfordEntries from '../dictionary/dictionary';\r\n\r\nconst dictionaryRouter = Router();\r\n// const lunchfunRouter = Router();\r\n\r\ndictionaryRouter.get('/oxford/:word', (req: Request, res: Response) => {\r\n  CheckOxfordEntries(req.params.word, res);\r\n});\r\n\r\n// lunchfunRouter.get('/pals', (req: Request, res: Response) => {\r\n//   GetPals(res);\r\n// });\r\n// lunchfunRouter.post('/pal', (req: Request, res: Response) => {\r\n//   AddPal(req.body.name, res);\r\n// });\r\n// lunchfunRouter.delete('/pal', (req: Request, res: Response) => {\r\n//   DeletePal(req.query, res);\r\n// });\r\n\r\n// lunchfunRouter.get('/records', (req: Request, res: Response) => {\r\n//   GetRecords(res);\r\n// });\r\n// lunchfunRouter.post('/record', (req: Request, res: Response) => {\r\n//   AddRecord(req.body.payer, req.body.attendees, res);\r\n// });\r\n// lunchfunRouter.delete('/record', (req: Request, res: Response) => {\r\n//   DeleteRecord(req.query._id, res);\r\n// });\r\n\r\n// lunchfunRouter.get('/stats/attendance', (req: Request, res: Response) => {\r\n//   GetPalsAttendance(res);\r\n// });\r\n\r\nexport default dictionaryRouter;\r\n","import Axios from 'axios';\r\nimport { Response } from '../interface';\r\nimport {\r\n  CheckEntriesResult,\r\n  OxfordEntries,\r\n  OxfordLemmas\r\n} from './oxford-interface';\r\n\r\nconst app_id: string = '0314e9e2';\r\nconst app_key: string = '5a6c2589474a2f83ccd69f397bfec7a2';\r\nconst config = {\r\n  headers: {\r\n    app_id: app_id,\r\n    app_key: app_key\r\n  }\r\n};\r\n\r\nasync function CheckOxfordEntries(word: string, res: Response) {\r\n  if (!word || !word.trim()) {\r\n    return res.status(400).send('Invalid word.');\r\n  }\r\n  word = word.trim().toLowerCase();\r\n\r\n  const url =\r\n    'https://od-api.oxforddictionaries.com/api/v2/entries/en-gb/' +\r\n    word +\r\n    '?fields=definitions%2Cpronunciations';\r\n\r\n  try {\r\n    let resp = await Axios(url, config);\r\n    let entries: OxfordEntries = resp.data;\r\n    let return_result: CheckEntriesResult = { lexicalEntries: [] };\r\n    for (let result of entries.results) {\r\n      for (let lexicalEntry of result.lexicalEntries) {\r\n        let new_lexicalEntry = {\r\n          entries: [],\r\n          lexicalCategory: '',\r\n          pronunciations: []\r\n        };\r\n        return_result.lexicalEntries.push(new_lexicalEntry);\r\n\r\n        if (lexicalEntry.lexicalCategory) {\r\n          new_lexicalEntry.lexicalCategory = lexicalEntry.lexicalCategory.text;\r\n        }\r\n        for (let entry of lexicalEntry.entries) {\r\n          for (let sense of entry.senses) {\r\n            for (let definition of sense.definitions || []) {\r\n              new_lexicalEntry.entries.push(definition);\r\n            }\r\n\r\n            for (let subsense of sense.subsenses || []) {\r\n              for (let definition of subsense.definitions) {\r\n                new_lexicalEntry.entries.push(definition);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        for (let pronunciation of lexicalEntry.pronunciations) {\r\n          new_lexicalEntry.pronunciations.push({\r\n            audioFile: pronunciation.audioFile,\r\n            phoneticSpelling: pronunciation.phoneticSpelling\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return res.status(200).send(return_result);\r\n  } catch (e) {\r\n    return res.status(400).send(e.message);\r\n  }\r\n}\r\n\r\nasync function CheckOxfordLemmas(word: string) {\r\n  if (!word || !word.trim()) {\r\n    return 'Invalid word.';\r\n  }\r\n  const url =\r\n    'https://od-api.oxforddictionaries.com/api/v2/lemmas/en-gb/' + word;\r\n\r\n  try {\r\n    let resp = await Axios(url, config);\r\n    const lemmas: OxfordLemmas = resp.data;\r\n    let return_result = [];\r\n    lemmas.results.forEach(result => {\r\n      result.lexicalEntries.forEach(lexicalEntry => {\r\n        lexicalEntry.inflectionOf.forEach(inflection => {\r\n          return_result.push(inflection);\r\n        });\r\n      });\r\n    });\r\n    return return_result;\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\nexport default CheckOxfordEntries;\r\n","import { Router } from 'express';\r\n\r\nimport giftsProductsRouter from './gifts-products';\r\nimport giftsOrdersRouter from './gifts-orders';\r\nimport giftsUsersRouter from './gifts-users';\r\nimport giftsStaffsRouter from './gifts-staffs';\r\n\r\nconst giftsRouter = Router();\r\n\r\n// url: /api/gifts\r\ngiftsRouter.use('/products', giftsProductsRouter);\r\ngiftsRouter.use('/orders', giftsOrdersRouter);\r\ngiftsRouter.use('/users', giftsUsersRouter);\r\ngiftsRouter.use('/staffs', giftsStaffsRouter);\r\n\r\nexport default giftsRouter;\r\n","import { Router } from 'express';\r\n\r\nimport { Request, Response } from '../interface';\r\nimport {\r\n  AddCategory,\r\n  DeleteCategory,\r\n  GetCategories,\r\n  GetSamplesOfCategories,\r\n  UpdateCategory\r\n} from '../gifts-products/gifts-products-categories.ops';\r\nimport {\r\n  AddProduct,\r\n  DeleteProduct,\r\n  GetProduct,\r\n  GetProductsByCategory,\r\n  UpdateProduct\r\n} from '../gifts-products/gifts-products.ops';\r\nimport {\r\n  AdjustInventory,\r\n  GetInventory\r\n} from '../gifts-products/gifts-products-inventory.ops';\r\nimport { bStaff } from '../gifts-staffs/gifts-staffs.ops';\r\n\r\nconst giftsProductsRouter = Router();\r\n\r\ngiftsProductsRouter.get('/view/:product_no', (req, res) => {\r\n  GetProduct(req.params, res);\r\n});\r\n\r\n/*\r\n * inquiry: /api/gifts/products\r\n */\r\ngiftsProductsRouter.get('/categories', (req: Request, res: Response) => {\r\n  GetCategories(res);\r\n});\r\ngiftsProductsRouter.post('/category', (req: Request, res: Response) => {\r\n  // liych\r\n  // if (!bStaff(req.session)) {\r\n  //   return res.status(403).send({ result: 'forbiddent' });\r\n  // }\r\n  AddCategory(req.body, res);\r\n});\r\ngiftsProductsRouter.put('/category', (req: Request, res: Response) => {\r\n  UpdateCategory(req.body, res);\r\n});\r\ngiftsProductsRouter.delete('/category', (req: Request, res: Response) => {\r\n  DeleteCategory(req.query, res);\r\n});\r\n\r\ngiftsProductsRouter.get('/samples', (req: Request, res: Response) => {\r\n  GetSamplesOfCategories(res);\r\n});\r\ngiftsProductsRouter.get('', (req: Request, res: Response) => {\r\n  GetProductsByCategory(req.query, res);\r\n});\r\ngiftsProductsRouter.get('/product', (req: Request, res: Response) => {\r\n  GetProduct(req.query, res);\r\n});\r\ngiftsProductsRouter.post('/product', (req: Request, res: Response) => {\r\n  AddProduct(req.body, res);\r\n});\r\ngiftsProductsRouter.put('/product', (req: Request, res: Response) => {\r\n  UpdateProduct(req.body, res);\r\n});\r\ngiftsProductsRouter.delete('/product', (req: Request, res: Response) => {\r\n  DeleteProduct(req.query, res);\r\n});\r\n\r\ngiftsProductsRouter.get('/inventory', (req, res) => {\r\n  GetInventory(res);\r\n});\r\ngiftsProductsRouter.put('/inventory', (req, res) => {\r\n  AdjustInventory(req.body._id, req.body.qty, res);\r\n});\r\n\r\nexport default giftsProductsRouter;\r\n","import { Response } from '../interface';\r\nimport { ObjectID, DbCollection } from '../mongodb-ops';\r\nimport { SqliteAll, SqliteRun } from '../db-ops/sqlite-ops';\r\n\r\nlet globalCategories = [];\r\nlet globalSamplesOfCategories = [];\r\n\r\nasync function GetCategories(res: Response) {\r\n  if (globalCategories.length > 0) {\r\n    return res.status(200).send(globalCategories);\r\n  }\r\n  try {\r\n    const sql = `select * from giftsProductsCategories;`;\r\n    globalCategories = await SqliteAll(sql);\r\n    return res.status(200).send(globalCategories);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function GetSamplesOfCategories(res: Response) {\r\n  if (globalSamplesOfCategories.length > 0) {\r\n    return res.status(200).send(globalSamplesOfCategories);\r\n  }\r\n  try {\r\n    globalSamplesOfCategories = await SqliteAll('');\r\n    return res.status(200).send(globalSamplesOfCategories);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function AddCategory(body: any, res: Response) {\r\n  if (!body.name) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n\r\n  try {\r\n    let fields = 'name,parent,category';\r\n    let values = '\"' + body.name + '\"';\r\n    if (body.parent) {\r\n      values += ',\"' + body.parent + '\"';\r\n      values += ',\"' + body.parent + '/' + body.name + '\"';\r\n    } else {\r\n      values += ',\"\"';\r\n      values += ',\"/' + body.name + '\"';\r\n    }\r\n    const sql = `insert into giftsProductsCategories (${fields}) values (${values})`;\r\n    let result = await SqliteRun(sql);\r\n    if (result) {\r\n      globalCategories = [];\r\n      globalSamplesOfCategories = [];\r\n      return res.status(200).send({ result: 'ok' });\r\n    }\r\n    return res.status(200).send({ result: 'failed' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function DeleteCategory(query: any, res: Response) {\r\n  if (!query.category) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n\r\n  try {\r\n    const sql = `delete from giftsProductsCategories where category='${query.category}';`;\r\n    let result = await SqliteRun(sql);\r\n    if (result) {\r\n      globalCategories = [];\r\n      globalSamplesOfCategories = [];\r\n      return res.status(200).send({ result: 'ok' });\r\n    }\r\n    return res.status(500).send({ result: 'failed' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function UpdateCategory(body: any, res: Response) {\r\n  if (!body.org || !body.newName) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n\r\n  try {\r\n    // liych rename for children\r\n    const sql1 = `select * from giftsProductsCategories where parent='${body.org.category}';`;\r\n    let children = await SqliteAll(sql1);\r\n    if (children) {\r\n      children.forEach(child => {});\r\n    }\r\n\r\n    const sql = `update giftsProductsCategories set name='${\r\n      body.newName\r\n    }',category='${(body.org.parent || '') +\r\n      '/' +\r\n      body.newName}' where category='${body.org.category}';`;\r\n    let result = await SqliteRun(sql);\r\n    if (result) {\r\n      globalCategories = [];\r\n      globalSamplesOfCategories = [];\r\n      return res.status(200).send({ result: 'ok' });\r\n    }\r\n    return res.status(500).send({ result: 'failed' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\n// @level:\r\n// 0 - all;  1 - 1st level;  2 - 2nd and above levels\r\nasync function GetCategoriesByLevel(level: number | null) {\r\n  if (globalCategories.length <= 0) {\r\n    try {\r\n      globalCategories = await SqliteAll(\r\n        'select * from giftsProductsCategories;'\r\n      );\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  if (!level) {\r\n    return globalCategories;\r\n  }\r\n  const returnCategories = [];\r\n  globalCategories.forEach(cat => {\r\n    console.log(cat.category.match(new RegExp('/', 'g')));\r\n    if (cat.category.match(new RegExp('/', 'g')).length <= level) {\r\n      returnCategories.push(cat);\r\n    }\r\n  });\r\n  return returnCategories;\r\n}\r\nGetCategoriesByLevel(0);\r\n\r\nexport {\r\n  AddCategory,\r\n  DeleteCategory,\r\n  GetCategories,\r\n  GetSamplesOfCategories,\r\n  UpdateCategory\r\n};\r\n","module.exports = require(\"sqlite3\");","import { SqliteAll, SqliteGet, SqliteRun } from '../db-ops/sqlite-ops';\r\nimport { DbCollection } from '../mongodb-ops';\r\nimport { Request, Response } from '../interface';\r\n\r\nasync function GetProduct(params: any, res: Response) {\r\n  if (!params.id) {\r\n    return res.status(400).send('Invalid product no.');\r\n  }\r\n\r\n  try {\r\n    const sql = `select * from giftsProducts where id=${params.id};`;\r\n    const product = await SqliteGet(sql);\r\n    return res.status(200).send(product);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function GetProductsByCategory(query: any, res: Response) {\r\n  if (!query.category) {\r\n    return res.status(400).send({ result: 'Invalid category.' });\r\n  }\r\n  try {\r\n    let ind = query.category.lastIndexOf('/');\r\n    let name = query.category.substring(ind + 1, query.category.lenght);\r\n    let parent = null;\r\n    if (ind !== 0) {\r\n      parent = query.category.substring(0, ind);\r\n    }\r\n    let sql: string = `select * from giftsProducts where name='${name}' and parent='${parent}'`;\r\n    let products = await SqliteAll(sql);\r\n    return res.status(200).send(products);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function AddProduct(body: any, res: Response) {\r\n  if (!body.name) {\r\n    return res.status(400).send('Invalid name.');\r\n  }\r\n\r\n  try {\r\n    let fields = '';\r\n    let values = '';\r\n    if (!body.name) {\r\n    }\r\n    fields = 'name';\r\n    values = '\"' + body.name + '\"';\r\n    if ((body.price | 0) <= 0) {\r\n      body.price = 0;\r\n    }\r\n    fields += ',price';\r\n    values += ',' + body.price;\r\n    if (!body.colour) {\r\n      body.colour = '';\r\n    }\r\n    fields += ',colour';\r\n    values += ',\"' + body.colour + '\"';\r\n    if (!body.category) {\r\n      body.category = '';\r\n    }\r\n    fields += ',category';\r\n    values += ',\"' + body.category + '\"';\r\n    if (!body.img) {\r\n      body.img = '';\r\n    }\r\n    fields += ',img';\r\n    values += ',\"' + body.img + '\"';\r\n    if (!body.packaging) {\r\n      body.packaging = '';\r\n    }\r\n    fields += ',packaging';\r\n    values += ',\"' + body.packaging + '\"';\r\n    if (!body.note) {\r\n      body.note = '';\r\n    }\r\n    fields += ',note';\r\n    values += ',\"' + body.note + '\"';\r\n    if (!body.material) {\r\n      body.material = '';\r\n    }\r\n    fields += ',material';\r\n    values += ',\"' + body.material + '\"';\r\n    if (!body.retailer) {\r\n      body.retailer = '';\r\n    }\r\n    fields += ',retailer';\r\n    values += ',\"' + body.retailer + '\"';\r\n    fields += ',createdOn';\r\n    values += ',' + new Date().getTime();\r\n\r\n    const sql = `insert into giftsProducts (${fields}) values (${values});`;\r\n    let result = await SqliteRun(sql);\r\n    if (result) {\r\n      return res.status(200).send({ result: 'ok' });\r\n    }\r\n    return res.status(500).send({ result: 'failed' });\r\n  } catch (e) {\r\n    console.log(e);\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function UpdateProduct(body: any, res: Response) {\r\n  if (!body.id) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n\r\n  try {\r\n    let changes: string = `name='${body.name}'`;\r\n    if (body.img) {\r\n      changes += `,img='${body.img}'`;\r\n    }\r\n    if (body.price) {\r\n      changes += `,price=${body.price}`;\r\n    }\r\n    if (body.category) {\r\n      changes += `,category='${body.category}'`;\r\n    }\r\n    if (body.colour) {\r\n      changes += `,colour='${body.colour}'`;\r\n    }\r\n    if (body.packaging) {\r\n      changes += `,packaging='${body.packaging}'`;\r\n    }\r\n    if (body.material) {\r\n      changes += `,material='${body.material}'`;\r\n    }\r\n    if (body.size) {\r\n      changes += `,size='${body.size}'`;\r\n    }\r\n    if (body.note) {\r\n      changes += `,note='${body.note}'`;\r\n    }\r\n    if (body.retailer) {\r\n      changes += `,retailer='${body.retailer}'`;\r\n    }\r\n    changes += `,modifiedOn='${Date.now()}'`;\r\n    const sql = `update giftsProducts set ${changes} where id=${body.id}`;\r\n    let result = await SqliteRun(sql);\r\n    if (result) {\r\n      return res.status(200).send({ result: 'ok' });\r\n    }\r\n    return res.status(500).send({ result: 'failed' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function DeleteProduct(query: any, res: Response) {\r\n  if (!query.id) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n\r\n  try {\r\n    const sql = `update giftsProducts set inactive=1 where id=${query.id};`;\r\n    const result = await SqliteRun(sql);\r\n    if (result) {\r\n      return res.status(200).send({ result: 'ok' });\r\n    }\r\n    return res.status(500).send({ result: 'failed' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nexport {\r\n  AddProduct,\r\n  DeleteProduct,\r\n  GetProductsByCategory,\r\n  GetProduct,\r\n  UpdateProduct\r\n};\r\n","module.exports = require(\"mongodb\");","import { Router } from 'express';\r\n\r\nimport { Request, Response } from '../interface';\r\n\r\nconst giftsOrdersRouter = Router();\r\n\r\n// order list with order_no, status & staff id to follow-up.\r\ngiftsOrdersRouter.get('/allOrders', (req: Request, res: Response) => {\r\n  if (!req.session || !req.session.staff) {\r\n    return res.sendStatus(401);\r\n  }\r\n  return res.status(200).send({ result: 'ok' });\r\n});\r\n\r\n// update order status by staff follow-up.\r\ngiftsOrdersRouter.put('/updateStatus', (req: Request, res: Response) => {\r\n  if (!req.session || !req.session.staff.id) {\r\n    return res.sendStatus(401);\r\n  }\r\n  if (!req.body.new_status || !req.body.sno || !req.body.order_no) {\r\n    return res.status(400).send('Failed. Pleaes review inputs.');\r\n  }\r\n\r\n  const param = {\r\n    1: req.body.order_no,\r\n    2: req.body.sno,\r\n    3: Date.now(),\r\n    4: req.session.staff.id,\r\n    5: req.body.new_status,\r\n    6: req.body.note || null\r\n  };\r\n  return res.status(200).send({ result: 'ok' });\r\n});\r\n\r\n// staff to update contact info of the order.\r\ngiftsOrdersRouter.put('/updateContact', (req: Request, res: Response) => {\r\n  if (!req.session || !req.session.staff.id) {\r\n    return res.sendStatus(401);\r\n  }\r\n  if (!req.body.order_no) {\r\n    return res.status(400).send('Order_no empty.');\r\n  } else if (\r\n    !req.body.email ||\r\n    !req.body.email.includes('@') ||\r\n    !req.body.email.includes('.') ||\r\n    req.body.email.includes('/') ||\r\n    req.body.email.includes('\\\\')\r\n  ) {\r\n    return res.status(400).send('Invalid email.');\r\n  } else if (!req.body.name) {\r\n    return res.status(400).send('Invalid name.');\r\n  }\r\n\r\n  const param = {\r\n    1: req.body.name,\r\n    2: req.body.email,\r\n    3: req.body.mobile || null,\r\n    4: req.body.company || null,\r\n    5: req.body.mobile2 || null,\r\n    6: req.body.addr || null,\r\n    7: req.body.order_no\r\n  };\r\n  return res.status(200).send({ result: 'ok' });\r\n});\r\n\r\n// staff to change order details e.g. price, qty, in case users changed mind.\r\n// staff may change status of specific product of the order.\r\ngiftsOrdersRouter.put('/updateOrderItem', (req: Request, res: Response) => {\r\n  if (!req.session || !req.session.staff.id) {\r\n    return res.sendStatus(401);\r\n  }\r\n\r\n  if (!req.body.order_no) {\r\n    return res.status(400).send('Failed. Invalid Order No.');\r\n  }\r\n  if (!req.body.sno || req.body.sno === '') {\r\n    return res.status(400).send('Failed. Invalid Order Sno.');\r\n  }\r\n\r\n  const param = {\r\n    1: req.body.new_sale_price,\r\n    2: req.body.new_qty,\r\n    3: req.body.new_status,\r\n    4: req.body.order_no,\r\n    5: req.body.sno\r\n  };\r\n  return res.status(200).send({ result: 'ok' });\r\n});\r\n\r\nexport default giftsOrdersRouter;\r\n","import { Router } from 'express';\r\n\r\nimport { Request, Response } from '../interface';\r\nimport {\r\n  Login,\r\n  Logout,\r\n  Register,\r\n  DeleteUser,\r\n  UserInfo\r\n} from '../gifts-users/gifts-users.ops';\r\nimport {\r\n  AddToCart,\r\n  CartCheckout,\r\n  DeleteCart,\r\n  DeleteInCart,\r\n  GetCart,\r\n  UpdateCartQty\r\n} from '../gifts-users/gifts-carts.ops';\r\n\r\nconst giftsUsersRouter = Router();\r\n\r\n// url: /api/gifts/users/\r\ngiftsUsersRouter.post('/login', (req: Request, res: Response) => {\r\n  Login(req, res);\r\n});\r\ngiftsUsersRouter.get('/info', (req: Request, res: Response) => {\r\n  UserInfo(req.session, res);\r\n});\r\ngiftsUsersRouter.get('/logout', (req: Request, res: Response) => {\r\n  Logout(req, res);\r\n});\r\ngiftsUsersRouter.post('/register', (req: Request, res: Response) => {\r\n  Register(req.body, res);\r\n});\r\ngiftsUsersRouter.delete('/deleteuser', (req: Request, res: Response) => {\r\n  DeleteUser(req.session, res);\r\n});\r\ngiftsUsersRouter.get('/cart', (req: Request, res: Response) => {\r\n  GetCart(req.session, res);\r\n});\r\ngiftsUsersRouter.post('/cart', (req: Request, res: Response) => {\r\n  AddToCart(req.session, req.body, res);\r\n});\r\ngiftsUsersRouter.delete('/cart', (req: Request, res: Response) => {\r\n  DeleteCart(req.session, res);\r\n});\r\ngiftsUsersRouter.put('/cart', (req: Request, res: Response) => {\r\n  UpdateCartQty(req, res);\r\n});\r\ngiftsUsersRouter.delete('/cart/product', (req: Request, res: Response) => {\r\n  DeleteInCart(req.session, req.query._id, res);\r\n});\r\ngiftsUsersRouter.post('/cart/checkout', (req: Request, res: Response) => {\r\n  CartCheckout(req, res);\r\n});\r\n\r\nexport default giftsUsersRouter;\r\n","module.exports = require(\"crypto\");","import { DbCollection, MongoDb, ObjectID } from '../mongodb-ops';\r\nimport { Request, Response } from '../interface';\r\nimport { randomString } from '../string-ops/random';\r\n\r\nimport { bLogin } from './gifts-users.ops';\r\nimport { CartItem } from './users-interface';\r\nimport {\r\n  DeleteInventoryReservation,\r\n  ReserveInventory\r\n} from '../gifts-products/gifts-products-inventory.ops';\r\nimport { NewOrder } from '../gifts-orders/gifts-orders.ops';\r\n\r\nasync function GetCart(session: any, res: Response) {\r\n  if (!bLogin(session)) {\r\n    return res.status(403).send('User not login');\r\n  }\r\n\r\n  try {\r\n    const db = await DbCollection('gifts-carts');\r\n    const cart = await db.findOne({ _id: new ObjectID(session.user._id) });\r\n    console.log(cart);\r\n    return res.status(200).send(cart);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function AddToCart(session: any, body: any, res: Response) {\r\n  if (!bLogin(session)) {\r\n    return res.status(403).send('User not login');\r\n  }\r\n\r\n  try {\r\n    const db = await DbCollection('gifts-carts');\r\n    let rslt = await db.updateOne(\r\n      { _id: new ObjectID(session.user._id) },\r\n      { $pull: { products: { productId: new ObjectID(body.product._id) } } }\r\n    );\r\n    rslt = await db.updateOne(\r\n      { _id: new ObjectID(session.user._id) },\r\n      {\r\n        $push: {\r\n          products: {\r\n            productId: new ObjectID(body.product._id),\r\n            quantity: body.qty,\r\n            name: body.product.name,\r\n            price: body.product.price\r\n          }\r\n        }\r\n      },\r\n      { upsert: true }\r\n    );\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function UpdateCartQty(req: Request, res: Response) {\r\n  if (!bLogin(req.session)) {\r\n    res.status(403).send('User not login.');\r\n  }\r\n  if (!req.body.productId || !req.body.qty) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n\r\n  try {\r\n    const db = await MongoDb();\r\n    const rslt = await db.collection('gifts-carts').updateOne(\r\n      {\r\n        _id: req.session.user._id,\r\n        'products.productId': req.body.productId\r\n      },\r\n      {\r\n        $set: {\r\n          'products.$.qty': req.body.qty,\r\n          modifiedOn: new Date()\r\n        }\r\n      }\r\n    );\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function DeleteCart(session: any, res: Response) {\r\n  if (!bLogin(session)) {\r\n    return res.status(400).send('User not login.');\r\n  }\r\n\r\n  try {\r\n    const db = await DbCollection('gifts-carts');\r\n    db.deleteOne({ _id: new ObjectID(session.user._id) });\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function DeleteInCart(session: any, _id: string, res: Response) {\r\n  if (!bLogin(session)) {\r\n    return res.status(400).send('User not login.');\r\n  }\r\n\r\n  try {\r\n    const db = await DbCollection('gifts-carts');\r\n    let rslt = await db.updateOne(\r\n      { _id: new ObjectID(session.user._id) },\r\n      { $pull: { products: { productId: new ObjectID(_id) } } }\r\n    );\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function CartCheckout(req: Request, res: Response) {\r\n  if (\r\n    !req.body.cart ||\r\n    !req.body.cart.customer ||\r\n    !req.body.cart.customer.name ||\r\n    !req.body.cart.customer.mobile ||\r\n    !req.body.cart.customer.address\r\n  ) {\r\n    return res.status(400).send('Invalid customer information.');\r\n  }\r\n  if (req.body.cart.total <= 0) {\r\n    return res.status(400).send('No product to checkout.');\r\n  }\r\n\r\n  let bMember: boolean = bLogin(req.session);\r\n\r\n  let id = '';\r\n  if (bMember) {\r\n    id = req.session.user._id;\r\n  } else {\r\n    id = randomString(20);\r\n  }\r\n  const cartItems: CartItem[] = req.body.cart.cartItems;\r\n  const customer = req.body.cart.customer;\r\n\r\n  try {\r\n    // reserve inventory, it throw error in case of failure.\r\n    await ReserveInventory(id, cartItems);\r\n\r\n    let insertRslt = await NewOrder(customer, cartItems);\r\n    if (insertRslt.result.n <= 0) {\r\n      await DeleteInventoryReservation(id);\r\n      throw 'Create new order failed.';\r\n    }\r\n\r\n    let updateRslt = await DeleteInventoryReservation(id);\r\n    console.log(updateRslt);\r\n\r\n    if (bMember) {\r\n      const dbCarts = await DbCollection('gifts-carts');\r\n      let deleteRslt = await dbCarts.deleteOne({ _id: new ObjectID(id) });\r\n    }\r\n\r\n    return res.status(200).send({ orderId: id });\r\n  } catch (e) {\r\n    console.error(e);\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nexport {\r\n  AddToCart,\r\n  CartCheckout,\r\n  DeleteCart,\r\n  DeleteInCart,\r\n  GetCart,\r\n  UpdateCartQty\r\n};\r\n","import { Request, Response } from '../interface';\r\nimport { DbCollection, ObjectID } from '../mongodb-ops';\r\nimport { bLogin } from '../gifts-users/gifts-users.ops';\r\nimport { CartItem } from '../gifts-users/users-interface';\r\n\r\nasync function NewOrder(customer, cartItems: CartItem[]) {\r\n  try {\r\n    const dbOrders = await DbCollection('gifts-orders');\r\n    let insertRslt = dbOrders.insertOne({\r\n      created_on: new Date(),\r\n      shipping: {\r\n        name: customer.name,\r\n        mobile: customer.mobile,\r\n        address: customer.address,\r\n        message: customer.message\r\n      },\r\n      payment: { method: 'visa', transaction_id: '2312213312XXXTD' },\r\n      cartItems: cartItems\r\n    });\r\n    console.log('insertRslt: ', insertRslt);\r\n    return insertRslt;\r\n  } catch (e) {\r\n    throw 'create new order failed.';\r\n  }\r\n}\r\n// async function GetCart(req: Request, res: Response) {\r\n//   if (!bLogin(req.session)) {\r\n//     return res.status(403).send('User not login');\r\n//   }\r\n\r\n//   try {\r\n//     const db = await MongoDb();\r\n//     let cart = await db\r\n//       .collection('gifts-carts')\r\n//       .find({ _id: req.session.user[0]._id })\r\n//       .toArray();\r\n\r\n//     return res.status(200).send(cart);\r\n//   } catch (e) {\r\n//     return res.status(500).send(e);\r\n//   }\r\n// }\r\n\r\n// async function UpdateCartQty(req: Request, res: Response) {\r\n//   if (!bLogin(req.session)) {\r\n//     res.status(403).send('User not login.');\r\n//   }\r\n//   if (!req.body.productId || !req.body.quantity) {\r\n//     return res.status(400).send('Invalid input.');\r\n//   }\r\n\r\n//   try {\r\n//     const db = await MongoDb();\r\n//     let rslt = await db.collection('gifts-carts').updateOne(\r\n//       {\r\n//         _id: req.session.user[0]._id,\r\n//         'products.productId': req.body.productId\r\n//       },\r\n//       {\r\n//         $set: {\r\n//           'products.$.quantity': req.body.quantity,\r\n//           modifiedOn: new Date()\r\n//         }\r\n//       }\r\n//     );\r\n//     console.log(rslt);\r\n//     return res.sendStatus(200);\r\n//   } catch (e) {\r\n//     return res.status(500).send(e);\r\n//   }\r\n// }\r\n\r\n// async function DeleteCart(req: Request, res: Response) {\r\n//   if (!bLogin(req.session)) {\r\n//     return res.status(400).send('User not login.');\r\n//   }\r\n\r\n//   try {\r\n//     const db = await MongoDb();\r\n//     await db\r\n//       .collection('gifts-carts')\r\n//       .deleteOne({ _id: req.session.user[0]._id });\r\n//     return res.sendStatus(200);\r\n//   } catch (e) {\r\n//     return res.status(500).send(e);\r\n//   }\r\n// }\r\n\r\n// async function DeleteCartProduct(req: Request, res: Response) {\r\n//   if (!bLogin(req.session)) {\r\n//     return res.status(400).send('User not login.');\r\n//   }\r\n\r\n//   try {\r\n//     const db = await MongoDb();\r\n//     await db.collection('gifts-carts').updateOne(\r\n//       { _id: req.session.user[0]._id },\r\n//       {\r\n//         $set: { modifiedOn: new Date() },\r\n//         $pull: {\r\n//           products: {\r\n//             productId: req.body.productId,\r\n//             quantity: req.body.quantity\r\n//           }\r\n//         }\r\n//       }\r\n//     );\r\n//     return res.sendStatus(200);\r\n//   } catch (e) {\r\n//     return res.status(500).send(e);\r\n//   }\r\n// }\r\n\r\n// async function CartCheckout(req: Request, res: Response) {\r\n//   if (!bLogin(req.session)) {\r\n//     return res.status(400).send('User not login.');\r\n//   }\r\n\r\n//   try {\r\n//     const db = await MongoDb();\r\n//     await db.collection('gifts-carts').updateOne(\r\n//       { _id: req.session.user[0]._id },\r\n//       {\r\n//         $set: { modifiedOn: new Date() },\r\n//         $pull: {\r\n//           products: {\r\n//             productId: req.body.productId,\r\n//             quantity: req.body.quantity\r\n//           }\r\n//         }\r\n//       }\r\n//     );\r\n//     return res.sendStatus(200);\r\n//   } catch (e) {\r\n//     return res.status(500).send(e);\r\n//   }\r\n// }\r\n\r\n// export { DeleteCart, DeleteCartProduct, GetCart, UpdateCartQty };\r\nexport { NewOrder };\r\n","import { Router } from 'express';\r\n\r\nimport { Request, Response } from '../interface';\r\nimport { newStaff } from '../gifts-staffs/staff-administrator';\r\n\r\nconst giftsStaffsRouter = Router();\r\n\r\ngiftsStaffsRouter.post('/login', (req: Request, res: Response) => {\r\n  // Login(req, res);\r\n});\r\ngiftsStaffsRouter.get('/logout', (req: Request, res: Response) => {\r\n  // Logout(req, res);\r\n});\r\ngiftsStaffsRouter.post('/admin/newStaff', (req: Request, res: Response) => {\r\n  newStaff(req, res);\r\n});\r\ngiftsStaffsRouter.delete('/deleteuser', (req: Request, res: Response) => {\r\n  // DeleteUser(req, res);\r\n});\r\n\r\nexport default giftsStaffsRouter;\r\n","import { Request, Response } from '../interface';\r\nimport { SqliteRun } from '../db-ops/sqlite-ops';\r\nimport { encrypt } from '../string-ops/crypto';\r\n\r\nasync function newStaff(req: Request, res: Response) {\r\n  if (!req.session || !req.session.staff) {\r\n    // return res.status(401).send({ result: 'Unauthorized.' });\r\n  }\r\n  // if (req.session.staff.class != 'administrator') {\r\n  // return res.status(403).send({ result: 'Operation not allowed.' });\r\n  // }\r\n\r\n  try {\r\n    if (!req.body.uid) {\r\n      return res.status(400).send({ result: 'uid is empty.' });\r\n    }\r\n    let fields = 'uid';\r\n    let values = '\"' + req.body.uid + '\"';\r\n    if (!req.body.pwd) {\r\n      return res.status(400).send({ result: 'pwd is empty.' });\r\n    }\r\n    fields += ',pwd';\r\n    values += ',\"' + encrypt(req.body.pwd) + '\"';\r\n    if (!req.body.firstName) {\r\n      return res.status(400).send({ result: 'first name is empty.' });\r\n    }\r\n    fields += ',firstname';\r\n    values += ',\"' + req.body.firstName + '\"';\r\n    if (!req.body.lastName) {\r\n      return res.status(400).send({ result: 'last name is empty.' });\r\n    }\r\n    fields += ',lastname';\r\n    values += ',\"' + req.body.lastName + '\"';\r\n\r\n    const sql = `insert into giftsStaffs (${fields}) values (${values})`;\r\n    let result = await SqliteRun(sql);\r\n    if (result === true) {\r\n      res.status(200).send({ result: 'ok' });\r\n    } else {\r\n      res.status(200).send({ result: 'failed' });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n    res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function disableStaff(req: Request, res: Response) {\r\n  if (!req.session || !req.session.staff) {\r\n    // return res.status(401).send({ result: 'Unauthorized.' });\r\n  }\r\n  // if (req.session.staff.class != 'administrator') {\r\n  // return res.status(403).send({ result: 'Operation not allowed.' });\r\n  // }\r\n\r\n  try {\r\n    if (!req.body.uid) {\r\n      return res.status(400).send({ result: 'uid is empty.' });\r\n    }\r\n    let uidString = '\"' + req.body.uid + '\"';\r\n\r\n    const sql = `update giftsStaffs set inactive=1 where uid=${uidString}`;\r\n    let result = await SqliteRun(sql);\r\n    if (result === true) {\r\n      res.status(200).send({ result: 'ok' });\r\n    } else {\r\n      res.status(200).send({ result: 'failed' });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n    res.status(500).send(e);\r\n  }\r\n}\r\n\r\nexport { newStaff };\r\n","import { Router } from 'express';\r\n\r\nimport { Request, Response } from '../interface';\r\nimport { Delete, Get, Post, Put } from '../http-request/http-request';\r\n\r\nconst httpRouter = Router();\r\n\r\nhttpRouter.post('', (req: Request, res: Response) => {\r\n  if (req.body.type === 'DELETE') {\r\n    Delete(req.body, res);\r\n  } else if (req.body.type === 'GET') {\r\n    Get(req.body, res);\r\n  } else if (req.body.type === 'POST') {\r\n    Post(req.body, res);\r\n  } else if (req.body.type === 'PUT') {\r\n    Put(req.body, res);\r\n  }\r\n});\r\n\r\nexport default httpRouter;\r\n","import Axios from 'axios';\r\n\r\nimport { Request, Response } from '../interface';\r\n\r\nfunction Delete(body: any, res: Response) {\r\n  let url = body.url;\r\n  if (body.querys && body.querys.length > 0) {\r\n    url += '?';\r\n    for (let i = 0; i < body.querys.length; ++i) {\r\n      url += body.query[i];\r\n      url += '=';\r\n      url += body.queryValue[i];\r\n    }\r\n  }\r\n  Axios.delete(url)\r\n    .then(response => {\r\n      res.status(200).send(response);\r\n    })\r\n    .catch(e => {\r\n      res.status(400).send(e);\r\n    });\r\n}\r\nfunction Post(req: Request, res: Response) {\r\n  let headers = {};\r\n\r\n  return res.status(200).send(req);\r\n  let url: string = req.body.url;\r\n  if (req.body.headers) {\r\n    headers = {\r\n      headers: req.body.headers\r\n    };\r\n  }\r\n  if (req.body.parameters) {\r\n    url += '?';\r\n    for (let i = 0; i < req.body.parameters.length; ++i) {\r\n      url += req.body.parameters[i] + '=' + req.body.parameterValue[i] + '&';\r\n    }\r\n  }\r\n  Axios.get(url, headers).then(response => {\r\n    res.send(response.data);\r\n  });\r\n}\r\nfunction Put(req: Request, res: Response) {\r\n  Axios.put(req.body.url).then(response => {\r\n    res.send(response.data);\r\n  });\r\n}\r\nfunction Get(req: Request, res: Response) {\r\n  Axios.post(req.body.url).then(response => {\r\n    res.send(response.data);\r\n  });\r\n}\r\n\r\nexport { Delete, Get, Post, Put };\r\n","import { createTransport } from 'nodemailer';\r\n\r\nimport { Response } from '../interface';\r\n\r\nconst transporter = createTransport({\r\n  host: 'mail.insg.xyz',\r\n  secure: true,\r\n  auth: {\r\n    user: 'i@insg.xyz',\r\n    pass: 'pass1234'\r\n  }\r\n});\r\n\r\nconst mailOptions = {\r\n  from: 'i@insg.xyz',\r\n  to: 'seesea2@gmail.com',\r\n  subject: 'Hello',\r\n  text: 'This is email from InSG.xyz',\r\n  html: '<b>this is email from InSG.xyz</b>'\r\n};\r\n\r\nfunction SendEmail(body: any, res: Response) {\r\n  // const emailHtml: string =\r\n  //   '<!DOCTYPE html><head>' +\r\n  //   '<meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\"></head>' +\r\n  //   `<body><br><b>Message from User ${body.name}` +\r\n  //   ' :</b><br><br>' +\r\n  //   `<p><b>Email: </b> ${body.email}` +\r\n  //   '</p>' +\r\n  //   `<p><b>Mobile: </b> ${body.mobile}` +\r\n  //   '</p>' +\r\n  //   `<p><b>Message: </b> ${body.message}` +\r\n  //   '</p>' +\r\n  //   '</body></html>';\r\n\r\n  // mailOptions.subject = 'User Inquiry';\r\n  // mailOptions.html = emailHtml;\r\n  transporter.sendMail(mailOptions);\r\n  return res.status(200).send({ result: 'ok' });\r\n}\r\n\r\nexport default SendEmail;\r\n","module.exports = require(\"nodemailer\");"],"sourceRoot":""}