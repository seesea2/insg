{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"axios\"","webpack:///external \"path\"","webpack:///./account-keys.ts","webpack:///./server/lta/lta.ts","webpack:///./server/lta/bus-stops.ts","webpack:///./server/server.ts","webpack:///external \"express\"","webpack:///external \"cors\"","webpack:///external \"body-parser\"","webpack:///./server/dictionary/dictionary.ts","webpack:///./server/lta/bus-arrival.ts","webpack:///./server/scraper/scrape.ts","webpack:///external \"cheerio\"","webpack:///external \"cron\"","webpack:///./server/db-ops.ts","webpack:///external \"sqlite3\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","ltaAccountKey","oxford_app_id","oxford_app_key","busArrivalUrl","busStopsUrl","headerConfig","headers","AccountKey","busStops","getBusStopsFromLta","skip","url","response","status","data","checkBusStopLocally","busStopCode","length","BusStopCode","getAllBusStops","newBusStops","temp","concat","getBusStop","res","send","message","busStop","getNearbyBusStops","latitude","longitude","undefined","nearbyStops","dLat","Latitude","Math","PI","dLong","Longitude","a","sin","cos","dist","atan2","sqrt","abs","push","sort","b","app","express","use","cors","bodyParser","json","urlencoded","extended","req","params","word","query","console","log","baseUrl","wordFrequence","sendFile","join","__dirname","static","all","next","listen","config","app_id","app_key","trim","toLowerCase","resp","entries","return_result","lexicalEntries","results","result","lexicalEntry","new_lexicalEntry","lexicalCategory","pronunciations","text","entry","senses","sense","definitions","definition","subsenses","subsense","pronunciation","audioFile","phoneticSpelling","then","respose","busArrival","catch","e","scrape","includes","Date","dateStr","toLocaleString","date","now","dbWrite","run","err","error","dbReset","urlResponse","cheerioLoad","cheerio","load","cheerioStatic","substring","title","each","this","type","href","attr","sql","scrapeUrl","obj","html","indexOf","split","forEach","match","toLocaleLowerCase","scrapeWords","CronJob","dbRead","row","offset","rows","DB","sqlite3","verbose","db_r","db_rw","close","Database","OPEN_READONLY","OPEN_READWRITE"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = require(\"axios\");","module.exports = require(\"path\");","export const ltaAccountKey: string = '6sVzf9zXRaCgkJUdjxIw2A==';\r\n\r\nexport const oxford_app_id: string = '0314e9e2';\r\nexport const oxford_app_key: string = '5a6c2589474a2f83ccd69f397bfec7a2';\r\n","import { ltaAccountKey } from '../../account-keys';\r\n\r\nconst busArrivalUrl =\r\n  'http://datamall2.mytransport.sg/ltaodataservice/BusArrivalv2';\r\nconst busStopsUrl = 'http://datamall2.mytransport.sg/ltaodataservice/BusStops';\r\n\r\nconst headerConfig = {\r\n  headers: {\r\n    AccountKey: ltaAccountKey\r\n  }\r\n};\r\n\r\nexport { busArrivalUrl, busStopsUrl, headerConfig };\r\n","import Axios from 'axios';\r\nimport { Response } from 'express';\r\n\r\nimport { busStopsUrl, headerConfig } from './lta';\r\nimport { BusStop } from './bus-stops-interface';\r\n\r\nlet busStops: BusStop[] = [];\r\n\r\nasync function getBusStopsFromLta(skip?: number): Promise<BusStop[]> {\r\n  try {\r\n    let url = busStopsUrl;\r\n    if (skip) {\r\n      url += `?$skip=${skip}`;\r\n    }\r\n    let response = await Axios.get(url, headerConfig);\r\n    if (response.status != 200) {\r\n      throw { status: response.status };\r\n    }\r\n    return response.data.value;\r\n  } catch (e) {\r\n    throw e;\r\n  }\r\n}\r\n\r\nasync function getAllBusStops() {\r\n  try {\r\n    let skip = 0;\r\n    let newBusStops: BusStop[] = [];\r\n    do {\r\n      newBusStops = await getBusStopsFromLta(skip);\r\n      let temp = busStops;\r\n      busStops = temp.concat(newBusStops);\r\n      skip += 500;\r\n    } while (newBusStops.length === 500);\r\n  } catch (e) {\r\n    busStops = [];\r\n    getAllBusStops();\r\n  }\r\n}\r\ngetAllBusStops();\r\n\r\nfunction checkBusStopLocally(busStopCode: string) {\r\n  if (!busStopCode) {\r\n    return;\r\n  }\r\n  for (let i = 0; i < busStops.length; i++) {\r\n    if (busStopCode === busStops[i].BusStopCode) {\r\n      return busStops[i];\r\n    }\r\n  }\r\n  return;\r\n}\r\n\r\nfunction getBusStop(busStopCode: string, res: Response) {\r\n  if (!busStopCode) {\r\n    return res.status(400).send({ message: 'Invalid Bus Stop Code.' });\r\n  }\r\n  let busStop = checkBusStopLocally(busStopCode);\r\n  if (busStop) {\r\n    return res.status(200).send(busStop);\r\n  }\r\n  return res.status(400).send({ message: 'Bus Stop info not found.' });\r\n}\r\n\r\nfunction getNearbyBusStops(latitude: number, longitude: number, res: Response) {\r\n  if (latitude === undefined || longitude === undefined) {\r\n    return res.status(400).send({ message: 'Invalid coordinates.' });\r\n  }\r\n\r\n  let nearbyStops = [];\r\n  const R = 6371e3;\r\n  for (let i = 0; i < busStops.length; i++) {\r\n    let dLat = ((busStops[i].Latitude - latitude) * Math.PI) / 180;\r\n    let dLong = ((busStops[i].Longitude - longitude) * Math.PI) / 180;\r\n\r\n    let a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos((busStops[i].Latitude * Math.PI) / 180) *\r\n        Math.cos((latitude * Math.PI) / 180) *\r\n        Math.sin(dLong / 2) *\r\n        Math.sin(dLong / 2);\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    let dist = R * c;\r\n    if (Math.abs(dist) < 280) {\r\n      nearbyStops.push({ dist: dist, busStop: busStops[i] });\r\n    }\r\n  }\r\n  nearbyStops = nearbyStops.sort((a, b) => {\r\n    if (a.dist > b.dist) {\r\n      return 1;\r\n    } else if (a.dist < b.dist) {\r\n      return -1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  });\r\n  res.status(200).send(nearbyStops);\r\n}\r\n\r\nexport { busStops, checkBusStopLocally, getBusStop, getNearbyBusStops };\r\n","import * as express from \"express\";\r\nimport { Request, Response, NextFunction } from \"express\";\r\nimport { join } from \"path\";\r\nimport * as cors from \"cors\";\r\nimport * as bodyParser from \"body-parser\";\r\n\r\nimport CheckOxfordEntries from \"./dictionary/dictionary\";\r\nimport getBusArrival from \"./lta/bus-arrival\";\r\nimport { getBusStop, getNearbyBusStops } from \"./lta/bus-stops\";\r\nimport { wordFrequence } from \"./scraper/scrape\";\r\n\r\n// Express server\r\nconst app = express();\r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\n\r\napp.get(\"/api/dictionary/oxford/:word\", (req: Request, res: Response) => {\r\n  CheckOxfordEntries(req.params.word, res);\r\n});\r\napp.get(\r\n  \"/api/lta/bus/busArrival/:busStopCode\",\r\n  (req: Request, res: Response) => {\r\n    getBusArrival(req.params.busStopCode, res);\r\n  }\r\n);\r\napp.get(\"/api/lta/bus/busStop/:busStopCode\", (req: Request, res: Response) => {\r\n  getBusStop(req.params.busStopCode, res);\r\n});\r\n\r\napp.get(\"/api/lta/bus/nearbyBusStops\", (req: Request, res: Response) => {\r\n  getNearbyBusStops(req.query.latitude, req.query.longitude, res);\r\n});\r\n\r\napp.get(\"/api/scraper/words\", (req: Request, res: Response) => {\r\n  console.log(\"get words\", req.baseUrl);\r\n  wordFrequence(req.query, res);\r\n});\r\n\r\napp.get(\"/\", (req: Request, res: Response) => {\r\n  return res.status(200).sendFile(join(__dirname, \"/client/index.html\"));\r\n});\r\n\r\n// Server static files from /client\r\napp.use(express.static(join(__dirname, \"/client\")));\r\n\r\n// error handling - 1\r\napp.all(\"/*\", (req: Request, res: Response) => {\r\n  console.log(\"all 1\", req.baseUrl);\r\n  return res.status(200).sendFile(join(__dirname, \"/client/index.html\"));\r\n});\r\napp.all(\"/*\", (req: Request, res: Response) => {\r\n  console.log(\"all 2\", req.baseUrl);\r\n  return res.status(404).send({ message: \"Page not found.\" });\r\n});\r\n// error handling - 2\r\napp.use((req: Request, res: Response, next: NextFunction) => {\r\n  console.log(\"all 3\", req.baseUrl);\r\n  return res\r\n    .status(500)\r\n    .send({ message: \"Issue happened. Please retry later!\" });\r\n});\r\n\r\napp.listen(8080, () => {\r\n  console.log(\"InSG listening HTTP on port 8080.\");\r\n});\r\n","module.exports = require(\"express\");","module.exports = require(\"cors\");","module.exports = require(\"body-parser\");","import Axios from 'axios';\r\nimport { Response } from 'express';\r\n\r\nimport {\r\n  CheckEntriesResult,\r\n  OxfordEntries,\r\n  OxfordLemmas,\r\n  IdText,\r\n  YcLexicalEntry\r\n} from './oxford-interface';\r\n\r\nimport { oxford_app_id, oxford_app_key } from '../../account-keys';\r\n\r\nconst config = {\r\n  headers: {\r\n    app_id: oxford_app_id,\r\n    app_key: oxford_app_key\r\n  }\r\n};\r\n\r\nasync function CheckOxfordEntries(word: string, res: Response) {\r\n  if (!word || !word.trim()) {\r\n    return res.status(400).send({ message: 'Invalid word.' });\r\n  }\r\n  word = word.trim().toLowerCase();\r\n\r\n  const url =\r\n    'https://od-api.oxforddictionaries.com/api/v2/entries/en-gb/' +\r\n    word +\r\n    '?fields=definitions%2Cpronunciations';\r\n\r\n  try {\r\n    let resp = await Axios(url, config);\r\n    let entries: OxfordEntries = resp.data;\r\n    let return_result: CheckEntriesResult = { lexicalEntries: [] };\r\n    for (let result of entries.results || []) {\r\n      for (let lexicalEntry of result.lexicalEntries || []) {\r\n        let new_lexicalEntry: YcLexicalEntry = {\r\n          entries: [],\r\n          lexicalCategory: '',\r\n          pronunciations: []\r\n        };\r\n        return_result.lexicalEntries.push(new_lexicalEntry);\r\n\r\n        if (lexicalEntry.lexicalCategory) {\r\n          new_lexicalEntry.lexicalCategory = lexicalEntry.lexicalCategory.text;\r\n        }\r\n        for (let entry of lexicalEntry.entries || []) {\r\n          for (let sense of entry.senses || []) {\r\n            for (let definition of sense.definitions || []) {\r\n              new_lexicalEntry.entries.push(definition);\r\n            }\r\n\r\n            for (let subsense of sense.subsenses || []) {\r\n              for (let definition of subsense.definitions || []) {\r\n                new_lexicalEntry.entries.push(definition);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        for (let pronunciation of lexicalEntry.pronunciations || []) {\r\n          new_lexicalEntry.pronunciations.push({\r\n            audioFile: pronunciation.audioFile,\r\n            phoneticSpelling: pronunciation.phoneticSpelling\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return res.status(200).send(return_result);\r\n  } catch (e) {\r\n    return res.status(400).send(e);\r\n  }\r\n}\r\n\r\nasync function CheckOxfordLemmas(word: string) {\r\n  if (!word || !word.trim()) {\r\n    return 'Invalid word.';\r\n  }\r\n  const url =\r\n    'https://od-api.oxforddictionaries.com/api/v2/lemmas/en-gb/' + word;\r\n\r\n  try {\r\n    let resp = await Axios(url, config);\r\n    const lemmas: OxfordLemmas = resp.data;\r\n    let return_result: IdText[] = [];\r\n    lemmas.results.forEach(result => {\r\n      result.lexicalEntries.forEach(lexicalEntry => {\r\n        lexicalEntry.inflectionOf.forEach(inflection => {\r\n          return_result.push(inflection);\r\n        });\r\n      });\r\n    });\r\n    return return_result;\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\nexport default CheckOxfordEntries;\r\n","import Axios from 'axios';\r\nimport { Response } from 'express';\r\n\r\nimport { busArrivalUrl, headerConfig } from './lta';\r\nimport { checkBusStopLocally } from './bus-stops';\r\n\r\nfunction getBusArrival(busStopCode: string, res: Response) {\r\n  busStopCode = busStopCode.trim();\r\n  if (!busStopCode) {\r\n    return res.status(400).send({ message: 'Invalid BusStopCode.' });\r\n  }\r\n\r\n  let busStop = checkBusStopLocally(busStopCode);\r\n  if (!busStop) {\r\n    return res.status(400).send({ message: 'Bus Stop not found.' });\r\n  }\r\n\r\n  let url = `${busArrivalUrl}?BusStopCode=${busStopCode}`;\r\n  Axios.get(url, headerConfig)\r\n    .then(respose => {\r\n      res.status(200).send({ busStop: busStop, busArrival: respose.data });\r\n    })\r\n    .catch(e => {\r\n      res.status(400).send(e);\r\n    });\r\n}\r\n\r\nexport default getBusArrival;\r\n","import { Response } from \"express\";\r\nimport Axios from \"axios\";\r\nimport * as cheerio from \"cheerio\";\r\nimport { CronJob } from \"cron\";\r\n\r\nimport { dbRead, dbWrite, dbReset } from \"../db-ops\";\r\n\r\nfunction scrapeUrl(url: string, cheerioStatic: CheerioStatic) {\r\n  if (!url) return;\r\n\r\n  if (!cheerioStatic) return;\r\n\r\n  if (url[url.length - 1] === \"/\") {\r\n    url = url.substring(0, length - 1);\r\n  }\r\n\r\n  let title = cheerioStatic(\"title\").text() || \"\";\r\n  cheerioStatic(\"html *\").each(function() {\r\n    if (this.type != \"tag\") return;\r\n\r\n    let obj = cheerioStatic(this);\r\n    let href = obj.attr(\"href\");\r\n    if (!href) return;\r\n\r\n    if (href.includes(\"http:\")) return;\r\n    if (href.includes(\"#\")) return;\r\n    if (href.includes(\".css\")) return;\r\n    if (href.includes(\".pdf\")) return;\r\n    if (href.includes(\"resources\")) return;\r\n    if (href.includes(\"?\")) return;\r\n\r\n    if (href === \"/\") {\r\n      href = \"\";\r\n    } else if (href[href.length - 1] === \"/\") {\r\n      href = href.substring(0, href.length - 1);\r\n    }\r\n\r\n    let sql = \"\";\r\n    if (href.includes(\"//\")) {\r\n      sql = `insert or ignore into urls(web,url) values(\"${title}\",\"${href}\")`;\r\n    } else if (!href || href[0] === \"/\") {\r\n      sql = `insert or ignore into urls(web,url) values(\"${title}\",\"${url}${href}\")`;\r\n    } else {\r\n      sql = `insert or ignore into urls(web,url) values(\"${title}\",\"${url}/${href}\")`;\r\n    }\r\n    try {\r\n      dbWrite().run(sql, err => {\r\n        if (err) {\r\n          dbReset();\r\n        }\r\n      });\r\n    } catch (err) {\r\n      dbReset();\r\n    }\r\n  });\r\n}\r\n\r\nfunction scrapeWords(url: string, cheerioStatic: CheerioStatic) {\r\n  if (!url || !cheerioStatic) return;\r\n\r\n  cheerioStatic(\"body *\").each(function() {\r\n    if (this.type != \"tag\") return;\r\n\r\n    let obj = cheerioStatic(this);\r\n    if (obj.html().indexOf(\"<\") != -1) return;\r\n\r\n    let text = obj.text();\r\n    if (!text) return;\r\n\r\n    let words = text.split(\" \");\r\n    words.forEach(word => {\r\n      word = word.trim();\r\n      if (!word) return;\r\n      if (!word.match(/^[a-zA-Z]+$/)) return;\r\n\r\n      word = word.toLocaleLowerCase();\r\n      const sql = `insert into words(word,frequence) values(\"${word}\",1)\r\n        on conflict(word) do update set frequence=frequence+1`;\r\n      try {\r\n        dbWrite().run(sql, err => {\r\n          if (err) {\r\n            dbReset();\r\n          }\r\n        });\r\n      } catch (err) {\r\n        dbReset();\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nasync function scrape(url: string) {\r\n  if (!url) return;\r\n  if (!url.includes(\"//\")) {\r\n    url = \"https://\" + url;\r\n  }\r\n\r\n  try {\r\n    console.log(new Date(), \"scraping: \", url);\r\n    let dateStr = new Date().toLocaleString();\r\n    let date = Date.now();\r\n    let sql = `insert into urls(url,scanDateStr,scanDate) \r\n      values(\"${url}\",\"${dateStr}\",${date})\r\n      on conflict(url) do update set scanDateStr=\"${dateStr}\",scanDate=${date}`;\r\n    dbWrite().run(sql, err => {\r\n      if (err) {\r\n        console.error(new Date(), err);\r\n        console.error(new Date(), sql);\r\n        dbReset();\r\n      }\r\n    });\r\n\r\n    let config = {\r\n      headers: {\r\n        \"Content-Length\": 0,\r\n        \"Content-Type\": \"text/plain\"\r\n      }\r\n    };\r\n    const urlResponse = await Axios(url, config);\r\n    let cheerioLoad = cheerio.load(urlResponse.data);\r\n    scrapeUrl(url, cheerioLoad);\r\n    scrapeWords(url, cheerioLoad);\r\n    return;\r\n  } catch (error) {\r\n    console.error(new Date(), \"scrape function error\");\r\n  }\r\n}\r\n\r\nnew CronJob(\r\n  \"0 */2 * * * *\",\r\n  () => {\r\n    let sql = \"select url from urls where scanDate is null;\";\r\n    dbRead().get(sql, (err, row) => {\r\n      if (err) {\r\n        console.error(new Date(), err);\r\n        dbReset();\r\n        return;\r\n      }\r\n      scrape(row.url);\r\n    });\r\n  },\r\n  null,\r\n  true,\r\n  \"Asia/Singapore\"\r\n);\r\n\r\nexport function wordFrequence(query: any, res: Response) {\r\n  let offset = 0;\r\n  if (query && query.offset && query.offset > 0) {\r\n    offset = query.offset;\r\n  }\r\n  const sql = `select * from words order by frequence limit 200 offset ${offset};`;\r\n\r\n  try {\r\n    dbRead().all(sql, (err, rows) => {\r\n      if (err) {\r\n        dbReset();\r\n        res.status(200).json([]);\r\n        return;\r\n      }\r\n      res.status(200).json(rows);\r\n    });\r\n  } catch (err) {\r\n    console.log(new Date(), err);\r\n  }\r\n}\r\n","module.exports = require(\"cheerio\");","module.exports = require(\"cron\");","import { join } from \"path\";\r\nimport { Database, OPEN_READONLY, OPEN_READWRITE, verbose } from \"sqlite3\";\r\n\r\nconst DB = join(__dirname, \"/../db.db3\");\r\n\r\nlet sqlite3 = verbose();\r\nlet db_r: Database = undefined;\r\nlet db_rw: Database = undefined;\r\n\r\nfunction dbReset() {\r\n  if (db_r) {\r\n    db_r.close();\r\n    db_r = undefined;\r\n  }\r\n  if (db_rw) {\r\n    db_rw.close();\r\n    db_rw = undefined;\r\n  }\r\n}\r\n\r\nfunction dbRead() {\r\n  if (!db_r) {\r\n    try {\r\n      db_r = new sqlite3.Database(DB, OPEN_READONLY);\r\n    } catch (err) {\r\n      console.log(\"dbRead:\", err);\r\n    }\r\n  }\r\n  return db_r;\r\n}\r\n\r\nfunction dbWrite() {\r\n  if (!db_rw) {\r\n    try {\r\n      db_rw = new sqlite3.Database(DB, OPEN_READWRITE);\r\n    } catch (err) {\r\n      console.log(\"dbWrite:\", err);\r\n    }\r\n  }\r\n  return db_rw;\r\n}\r\n\r\nexport { dbReset, dbWrite, dbRead };\r\n","module.exports = require(\"sqlite3\");"],"sourceRoot":""}