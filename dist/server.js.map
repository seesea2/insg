{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"express\"","webpack:///./server/mongodb-ops.ts","webpack:///external \"axios\"","webpack:///./server/lta/lta.ts","webpack:///./server/lta/bus-stops.ts","webpack:///./server/gifts-products/gifts-products-inventory.ops.ts","webpack:///./server/gifts-users/gifts-users.ops.ts","webpack:///./server/string-ops.ts","webpack:///./server/server.ts","webpack:///external \"express-session\"","webpack:///external \"path\"","webpack:///external \"cors\"","webpack:///external \"body-parser\"","webpack:///./server/api-router.ts","webpack:///./server/lta/router.ts","webpack:///./server/lta/bus-arrival.ts","webpack:///./server/http-request/router.ts","webpack:///./server/http-request/http-request.ts","webpack:///./server/lunchfun-and-dictionary/router.ts","webpack:///./server/lunchfun-and-dictionary/dictionary.ts","webpack:///./server/lunchfun-and-dictionary/lunchfun-pals.ts","webpack:///external \"mongodb\"","webpack:///./server/lunchfun-and-dictionary/lunchfun-records.ts","webpack:///./server/api-gifts-router.ts","webpack:///./server/gifts-products/gifts-products-router.ts","webpack:///./server/gifts-products/gifts-products-categories.ops.ts","webpack:///./server/gifts-products/gifts-products.ops.ts","webpack:///./server/gifts-orders/gifts-orders-router.ts","webpack:///./server/gifts-users/gifts-users-router.ts","webpack:///external \"crypto\"","webpack:///./server/gifts-users/gifts-carts.ops.ts","webpack:///./server/gifts-orders/gifts-orders.ops.ts","webpack:///./server/gifts-staffs/gifts-staffs-router.ts","webpack:///./server/email/email.ops.ts","webpack:///external \"nodemailer\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","mongodb_1","ObjectID","database","MONGO_URL","InitDb","MongoClient","connect","useNewUrlParser","client","_a","sent","db","MongoDb","DbCollection","collection","busArrivalUrl","busStopsUrl","headerConfig","headers","AccountKey","axios_1","lta_1","busStops","getBusStopsFromLta","skip","url","default","response","status","data","checkBusStopLocally","busStopCode","length","BusStopCode","getAllBusStops","newBusStops","temp","concat","getBusStopInfo","res","send","busStopInfo","getNearbyBusStops","latitude","longitude","undefined","nearbyStops","dLat","Latitude","Math","PI","dLong","Longitude","a","sin","cos","dist","atan2","sqrt","abs","push","mongodb_ops_1","GetInventory","find","toArray","inventory","e_1","message","AdjustInventory","_id","qty","updateOne","$set","modifiedOn","Date","upsert","rslt","e_2","ReserveInventory","id","cartItems","success","failed","dbInventory","product","$gte","$inc","$push","reservations","createdOn","result","nModified","reservations._id","$pull","DeleteInventoryReservation","updateRslt","console","log","e_4","_this","this","string_ops_1","bLogin","session","user","__awaiter","createIndex","unique","Login","req","uid","dbUsers","_b","findOne","body","pwd","encrypt","Logout","Register","email","firstName","lastName","insertOne","insertedCount","ops","DeleteUser","deleteOne","e_3","UserInfo","RandomTypes","crypto","algorithm","scryptSync","iv","Buffer","alloc","random","type","rString","String","Number","Capital","floor","text","cipher","createCipheriv","crypted","update","final","e","decrypt","decipher","createDecipheriv","dec","randomNumber","randomCapitals","randomString","express","path_1","cors","bodyParser","api_router_1","app","use","json","urlencoded","extended","secret","resave","saveUninitialized","cookie","maxAge","sendFile","join","__dirname","static","dotfiles","all","next","listen","express_1","router_1","router_2","router_3","api_gifts_router_1","email_ops_1","apiRouter","Router","dictionaryRouter","lunchfunRouter","busRouter","post","bus_arrival_1","bus_stops_1","params","query","trim","then","respose","busArrival","catch","http_request_1","httpRouter","Delete","Get","Post","Put","querys","queryValue","delete","put","dictionary_1","lunchfun_pals_1","lunchfun_records_1","word","GetPals","AddPal","DeletePal","GetRecords","AddRecord","payer","attendees","DeleteRecord","GetPalsAttendance","config","app_id","app_key","resp","lemmas","return_result_1","results","forEach","lexicalEntries","lexicalEntry","inflectionOf","inflection","CheckOxfordLemmas","toLowerCase","_r","entries","return_result","_i","_c","new_lexicalEntry","lexicalCategory","pronunciations","_d","_e","entry","_f","_g","senses","sense","_h","_j","definitions","definition","_k","_l","subsenses","subsense","_m","_o","_p","_q","pronunciation","audioFile","phoneticSpelling","lunchPals","refreshPals","sort","aggregate","$unwind","$group","attendance","$sum","$project","attendances","e_5","limit","records","gifts_products_router_1","gifts_orders_router_1","gifts_users_router_1","gifts_staffs_router_1","giftsRouter","gifts_products_categories_ops_1","gifts_products_ops_1","gifts_products_inventory_ops_1","giftsProductsRouter","GetProduct","GetCategories","AddCategory","DeleteCategory","GetSamplesOfCategories","GetProductsByCategory","AddProduct","UpdateProduct","DeleteProduct","globalCategories","globalSamplesOfCategories","GetCategoriesByLevel","level","GetCategoriesFromDb","returnCategories","cat","category","match","RegExp","errMsg","GetSamples","dbCollection","$sort","products","img","$slice","e_7","categories","docs","regex","price","color","packaging","material","size","note","retailer","giftsOrdersRouter","staff","sendStatus","new_status","sno","order_no","now","includes","mobile","company","mobile2","addr","new_sale_price","new_qty","gifts_users_ops_1","gifts_carts_ops_1","giftsUsersRouter","GetCart","AddToCart","DeleteCart","UpdateCartQty","DeleteInCart","CartCheckout","gifts_orders_ops_1","cart","productId","quantity","products.productId","products.$.qty","customer","address","total","bMember","NewOrder","orderId","error","e_6","dbOrders","insertRslt","created_on","shipping","payment","method","transaction_id","giftsStaffsRouter","transporter","createTransport","host","secure","auth","pass","mailOptions","from","to","subject","html","SendEmail","sendMail"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = require(\"express\");","import { MongoClient, Db, ObjectID } from 'mongodb';\r\n\r\nconst MONGO_URL =\r\n  'mongodb+srv://admin:admin@cluster0-dxwkg.mongodb.net/insg?retryWrites=true';\r\n\r\nlet database: Db;\r\n\r\nasync function InitDb(): Promise<Db> {\r\n  try {\r\n    const client = await MongoClient.connect(MONGO_URL, {\r\n      useNewUrlParser: true\r\n    });\r\n    return (database = client.db('insg'));\r\n  } catch (e) {\r\n    throw 'Database connection failed.';\r\n  }\r\n}\r\n\r\nasync function MongoDb(): Promise<Db> {\r\n  if (database) {\r\n    return database;\r\n  }\r\n\r\n  try {\r\n    await InitDb();\r\n    return database;\r\n  } catch (e) {\r\n    // console.log(e);\r\n    throw e;\r\n  }\r\n}\r\n\r\nasync function DbCollection(name: string) {\r\n  if (database) {\r\n    return database.collection(name);\r\n  }\r\n\r\n  try {\r\n    await InitDb();\r\n    return database.collection(name);\r\n  } catch (e) {\r\n    throw e;\r\n  }\r\n}\r\n\r\nexport { DbCollection, MongoDb, ObjectID };\r\n","module.exports = require(\"axios\");","const ltaAccountKey = '6sVzf9zXRaCgkJUdjxIw2A==';\r\n\r\nconst busArrivalUrl =\r\n  'http://datamall2.mytransport.sg/ltaodataservice/BusArrivalv2';\r\nconst busStopsUrl = 'http://datamall2.mytransport.sg/ltaodataservice/BusStops';\r\n\r\nconst headerConfig = {\r\n  headers: {\r\n    AccountKey: ltaAccountKey\r\n  }\r\n};\r\n\r\nexport { busArrivalUrl, busStopsUrl, headerConfig };\r\n","import Axios from 'axios';\r\n\r\nimport { Response } from '../interface';\r\nimport { busStopsUrl, headerConfig } from './lta';\r\nimport { BusStopInfo } from './bus-stops-interface';\r\n\r\nlet busStops: BusStopInfo[] = [];\r\n\r\nasync function getBusStopsFromLta(skip?: number): Promise<BusStopInfo[]> {\r\n  try {\r\n    let url = busStopsUrl;\r\n    if (skip) {\r\n      url += `?$skip=${skip}`;\r\n    }\r\n    let response = await Axios.get(url, headerConfig);\r\n    if (response.status != 200) {\r\n      throw { status: response.status };\r\n    }\r\n    return response.data.value;\r\n  } catch (e) {\r\n    throw e;\r\n  }\r\n}\r\n\r\nasync function getAllBusStops() {\r\n  try {\r\n    let skip = 0;\r\n    let newBusStops: BusStopInfo[] = [];\r\n    do {\r\n      newBusStops = await getBusStopsFromLta(skip);\r\n      let temp = busStops;\r\n      busStops = temp.concat(newBusStops);\r\n      skip += 500;\r\n    } while (newBusStops.length === 500);\r\n  } catch (e) {\r\n    busStops = [];\r\n    getAllBusStops();\r\n  }\r\n}\r\ngetAllBusStops();\r\n\r\nfunction checkBusStopLocally(busStopCode: string) {\r\n  if (!busStopCode) {\r\n    return;\r\n  }\r\n  for (let i = 0; i < busStops.length; i++) {\r\n    if (busStopCode === busStops[i].BusStopCode) {\r\n      return busStops[i];\r\n    }\r\n  }\r\n  return;\r\n}\r\n\r\nfunction getBusStopInfo(busStopCode: string, res: Response) {\r\n  if (!busStopCode) {\r\n    return res.status(400).send('Invalid Bus Stop Code.');\r\n  }\r\n  let busStopInfo = checkBusStopLocally(busStopCode);\r\n  if (busStopInfo) {\r\n    return res.status(200).send(busStopInfo);\r\n  }\r\n  return res.status(400).send('Bus Stop Info not found.');\r\n}\r\n\r\nfunction getNearbyBusStops(latitude: number, longitude: number, res: Response) {\r\n  if (latitude === undefined || longitude === undefined) {\r\n    return res.status(400).send('Invalid coordinates.');\r\n  }\r\n\r\n  let nearbyStops = [];\r\n  const R = 6371e3;\r\n  for (let i = 0; i < busStops.length; i++) {\r\n    let dLat = ((busStops[i].Latitude - latitude) * Math.PI) / 180;\r\n    let dLong = ((busStops[i].Longitude - longitude) * Math.PI) / 180;\r\n\r\n    let a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos((busStops[i].Latitude * Math.PI) / 180) *\r\n        Math.cos((latitude * Math.PI) / 180) *\r\n        Math.sin(dLong / 2) *\r\n        Math.sin(dLong / 2);\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    let dist = R * c;\r\n    if (Math.abs(dist) < 400) {\r\n      nearbyStops.push(busStops[i]);\r\n    }\r\n  }\r\n  res.status(200).send(nearbyStops);\r\n}\r\n\r\nexport { busStops, checkBusStopLocally, getBusStopInfo, getNearbyBusStops };\r\n","import { Response } from '../interface';\r\nimport { DbCollection, ObjectID } from '../mongodb-ops';\r\n\r\nasync function GetInventory(res: Response) {\r\n  try {\r\n    const dbInventory = await DbCollection('gifts-inventory');\r\n    const inventory = await dbInventory.find().toArray();\r\n    return res.status(200).send(inventory);\r\n  } catch (e) {\r\n    return res.status(500).send(e.message);\r\n  }\r\n}\r\n\r\n// qty by product; Todo: by colour, size, etc.\r\nasync function AdjustInventory(_id: string, qty: number, res: Response) {\r\n  if (!_id || !qty) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n  try {\r\n    const dbInventory = await DbCollection('gifts-inventory');\r\n    const rslt = await dbInventory.updateOne(\r\n      {\r\n        _id: new ObjectID(_id)\r\n      },\r\n      { $set: { modifiedOn: new Date(), qty: qty } },\r\n      { upsert: true }\r\n    );\r\n    return res.status(200).send(rslt);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function ReserveInventory(id: string, cartItems: any) {\r\n  if (!cartItems || cartItems.length <= 0) {\r\n    throw 'The cart is empty.';\r\n  }\r\n\r\n  try {\r\n    const success = [];\r\n    const failed = [];\r\n\r\n    const dbInventory = await DbCollection('gifts-inventory');\r\n    for (let i = 0; i < cartItems.length; i++) {\r\n      const result = await dbInventory.updateOne(\r\n        {\r\n          _id: new ObjectID(cartItems[i].product._id),\r\n          qty: { $gte: cartItems[i].qty }\r\n        },\r\n        {\r\n          $inc: { qty: -cartItems[i].qty },\r\n          $push: {\r\n            reservations: {\r\n              qty: cartItems[i].qty,\r\n              _id: new ObjectID(id),\r\n              createdOn: new Date()\r\n            }\r\n          }\r\n        }\r\n      );\r\n      if (result.result.nModified === 0) {\r\n        failed.push(cartItems[i].product);\r\n        break;\r\n      } else {\r\n        success.push(cartItems[i].product);\r\n      }\r\n    }\r\n\r\n    if (failed.length > 0) {\r\n      for (let i = 0; i < success.length; i++) {\r\n        dbInventory.updateOne(\r\n          {\r\n            _id: success[i]._id,\r\n            'reservations._id': id\r\n          },\r\n          {\r\n            $inc: { qty: success[i].qty },\r\n            $pull: { reservations: { _id: id } }\r\n          }\r\n        );\r\n      }\r\n      throw 'Not enough storage.';\r\n    }\r\n    return 'Success.';\r\n  } catch (e) {\r\n    throw e;\r\n  }\r\n}\r\n\r\nasync function DeleteInventoryReservation(_id: string) {\r\n  try {\r\n    const dbInventory = await DbCollection('gifts-inventory');\r\n    let updateRslt = await dbInventory.updateOne(\r\n      {\r\n        'reservations._id': new ObjectID(_id)\r\n      },\r\n      {\r\n        $pull: { reservations: { _id: new ObjectID(_id) } }\r\n      }\r\n    );\r\n    if (updateRslt.result.nModified <= 0) {\r\n      throw 'delete reservation failed.';\r\n    }\r\n    return updateRslt;\r\n  } catch (e) {\r\n    console.log(e);\r\n    throw 'delete reservation failed with exception.';\r\n  }\r\n}\r\n\r\nexport {\r\n  AdjustInventory,\r\n  DeleteInventoryReservation,\r\n  GetInventory,\r\n  ReserveInventory\r\n};\r\n","import { DbCollection, MongoDb, ObjectID } from '../mongodb-ops';\r\nimport { Request, Response } from '../interface';\r\nimport { encrypt } from '../string-ops';\r\n\r\n(async () => {\r\n  const db = await DbCollection('gifts-users');\r\n  db.createIndex('uid', { unique: true });\r\n})();\r\n\r\nasync function Login(req: Request, res: Response) {\r\n  if (req.session && req.session.user) {\r\n    return res.status(200).send({ uid: req.session.user.uid });\r\n  }\r\n  try {\r\n    let dbUsers = await DbCollection('gifts-users');\r\n    req.session.user = await dbUsers.findOne({\r\n      uid: req.body.uid,\r\n      pwd: encrypt(req.body.pwd)\r\n    });\r\n    if (!req.session.user) {\r\n      return res.status(403).send('Incorrect username or password');\r\n    }\r\n    return res.status(200).send({ uid: req.session.user.uid });\r\n  } catch (e) {\r\n    return res.status(500).send('server error.');\r\n  }\r\n}\r\n\r\nfunction Logout(req: Request, res: Response) {\r\n  if (req.session && req.session.user) {\r\n    req.session.user = null;\r\n  }\r\n  return res.status(200).send({ result: 'ok' });\r\n}\r\n\r\nasync function Register(req: Request, res: Response) {\r\n  if (\r\n    !req.body.uid ||\r\n    !req.body.pwd ||\r\n    !req.body.email ||\r\n    !req.body.firstName ||\r\n    !req.body.lastName\r\n  ) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n  try {\r\n    let dbUsers = await DbCollection('gifts-users');\r\n    let rslt = await dbUsers.insertOne({\r\n      uid: req.body.uid,\r\n      pwd: encrypt(req.body.pwd),\r\n      email: req.body.email,\r\n      firstName: req.body.firstName,\r\n      lastName: req.body.lastName,\r\n      createdOn: new Date()\r\n    });\r\n    if (rslt.insertedCount === 1) {\r\n      return res.status(200).send(rslt.ops[0]);\r\n    } else {\r\n      return res.status(500).send('Register failed. Please try again later.');\r\n    }\r\n  } catch (e) {\r\n    // console.log(e);\r\n    return res.status(500).send('Register failed. Please try again later.');\r\n  }\r\n}\r\n\r\nasync function DeleteUser(session: any, res: Response) {\r\n  if (!session || !session.user) {\r\n    return res.status(403).send('Login is required.');\r\n  }\r\n  try {\r\n    let db = await MongoDb();\r\n    db.collection('gifts-users').deleteOne({\r\n      _id: session.user._id\r\n    });\r\n    session.user = null;\r\n    return res.status(200).send({ result: 'User deleted.' });\r\n  } catch (e) {\r\n    return res.status(400).send(e);\r\n  }\r\n}\r\n\r\nfunction UserInfo(session: any, res) {\r\n  if (!bLogin(session)) {\r\n    return res.status(403).send('User Not login.');\r\n  }\r\n  return res.status(200).send({\r\n    _id: session.user._id,\r\n    uid: session.user.uid,\r\n    email: session.user.email\r\n  });\r\n}\r\n\r\nfunction bLogin(session: any) {\r\n  if (!session || !session.user) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport { bLogin, Login, Logout, Register, DeleteUser, UserInfo };\r\n","import * as crypto from 'crypto';\r\n\r\nconst algorithm = 'aes-192-cbc';\r\nconst password = 'inSGyc83';\r\nconst key = crypto.scryptSync(password, 'salt', 24);\r\nconst iv = Buffer.alloc(16, 0);\r\n\r\nfunction encrypt(text: string): string {\r\n  try {\r\n    let cipher = crypto.createCipheriv(algorithm, key, iv);\r\n    let crypted: string = cipher.update(text, 'utf8', 'hex');\r\n    crypted += cipher.final('hex');\r\n    return crypted;\r\n  } catch (e) {\r\n    // console.log('encrypt => ', e);\r\n  }\r\n}\r\n\r\nfunction decrypt(text: string): string {\r\n  try {\r\n    let decipher = crypto.createDecipheriv(algorithm, key, iv);\r\n    let dec: string = decipher.update(text, 'hex', 'utf8');\r\n    dec += decipher.final('utf8');\r\n    return dec;\r\n  } catch (e) {\r\n    // console.log('decrypt => ', e);\r\n  }\r\n}\r\n\r\n/*\r\n * string operation\r\n */\r\nenum RandomTypes {\r\n  Capital,\r\n  Number,\r\n  String\r\n}\r\n\r\n// return string of random numbers with specified length.\r\nfunction randomNumber(length: number): string {\r\n  return random(RandomTypes.Number, length);\r\n}\r\n\r\n// return string of random capital characters with specified length.\r\nfunction randomCapitals(length: number): string {\r\n  return random(RandomTypes.Capital, length);\r\n}\r\n\r\n// return string of random characters or numbers with specified length.\r\nfunction randomString(length: number): string {\r\n  return random(RandomTypes.String, length);\r\n}\r\n\r\nfunction random(type: RandomTypes, length: number): string {\r\n  let rString: string = '';\r\n  if (type === RandomTypes.String) {\r\n    rString = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  } else if (type === RandomTypes.Number) {\r\n    rString = '0123456789';\r\n  } else if (type === RandomTypes.Capital) {\r\n    rString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  } else {\r\n    return '';\r\n  }\r\n\r\n  let result: string = '';\r\n  for (let i = length; i > 0; --i) {\r\n    result += rString[Math.floor(Math.random() * rString.length)];\r\n  }\r\n  return result;\r\n}\r\n\r\nexport {\r\n  encrypt,\r\n  decrypt,\r\n  randomCapitals,\r\n  randomNumber,\r\n  randomString,\r\n  RandomTypes\r\n};\r\n","import * as express from 'express';\r\nimport * as session from 'express-session';\r\nimport { join } from 'path';\r\nimport * as cors from 'cors';\r\nimport * as bodyParser from 'body-parser';\r\n\r\nimport { Request, Response, NextFunction } from './interface';\r\nimport apiRouter from './api-router';\r\n\r\n// Express server\r\nconst app = express();\r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\n\r\napp.use(\r\n  session({\r\n    secret: 'insg-yc-ly-17',\r\n    resave: false,\r\n    saveUninitialized: true,\r\n    cookie: {\r\n      maxAge: 1000 * 60 * 60 * 24 // millseconds of 24hrs  }\r\n    }\r\n  })\r\n);\r\n\r\napp.use('/api', apiRouter);\r\n\r\napp.get('/', (req: Request, res: Response) => {\r\n  return res.status(200).sendFile(join(__dirname, '/client/index.html'));\r\n});\r\n\r\n// Server static files from /client\r\napp.use(express.static(join(__dirname, '/client')));\r\napp.use(\r\n  express.static(join(__dirname, '/client/assets'), { dotfiles: 'allow' })\r\n);\r\n\r\n// error handling - 1\r\napp.all('/*', (req: Request, res: Response) => {\r\n  return res.status(200).sendFile(join(__dirname, '/client/index.html'));\r\n});\r\n// error handling - 2\r\napp.use((req: Request, res: Response, next: NextFunction) => {\r\n  return res.status(500).send('Issue happened. Please retry later!');\r\n});\r\n\r\napp.listen(8080, () => {\r\n  console.log('app listening on port 8080.');\r\n});\r\n","module.exports = require(\"express-session\");","module.exports = require(\"path\");","module.exports = require(\"cors\");","module.exports = require(\"body-parser\");","import { Router } from 'express';\r\nimport { Request, Response } from './interface';\r\n\r\nimport { busRouter } from './lta/router';\r\nimport httpRouter from './http-request/router';\r\nimport {\r\n  dictionaryRouter,\r\n  lunchfunRouter\r\n} from './lunchfun-and-dictionary/router';\r\nimport giftsRouter from './api-gifts-router';\r\nimport SendEmail from './email/email.ops';\r\n\r\nconst apiRouter = Router();\r\n\r\n// url: /api\r\napiRouter.use('/dictionary', dictionaryRouter);\r\napiRouter.use('/http', httpRouter);\r\napiRouter.use('/lunchfun', lunchfunRouter);\r\napiRouter.use('/lta/bus', busRouter);\r\napiRouter.use('/gifts', giftsRouter);\r\n\r\n// msg from users; forward it via nodemailer.\r\napiRouter.post('/msg', (req: Request, res: Response) => {\r\n  SendEmail(req.body, res);\r\n});\r\n\r\n// error handling\r\napiRouter.all('/*', (req: Request, res: Response) => {\r\n  return res.status(400).send('Invalid Request');\r\n});\r\n\r\nexport default apiRouter;\r\n","import { Router } from 'express';\r\n\r\nimport { Request, Response } from '../interface';\r\nimport getBusArrival from './bus-arrival';\r\nimport { getBusStopInfo, getNearbyBusStops } from './bus-stops';\r\n\r\n// url: /api/lta/bus\r\nconst busRouter = Router();\r\n\r\nbusRouter.get('/busArrival/:busStopCode', (req: Request, res: Response) => {\r\n  getBusArrival(req.params.busStopCode, res);\r\n});\r\n\r\nbusRouter.get('/busStop/:busStopCode', (req: Request, res: Response) => {\r\n  getBusStopInfo(req.params.busStopCode, res);\r\n});\r\n\r\nbusRouter.get('/nearbyBusStops', (req: Request, res: Response) => {\r\n  getNearbyBusStops(req.query.latitude, req.query.longitude, res);\r\n});\r\n\r\nexport { busRouter };\r\n","import Axios from 'axios';\r\n\r\nimport { Response } from '../interface';\r\nimport { busArrivalUrl, headerConfig } from './lta';\r\nimport { checkBusStopLocally } from './bus-stops';\r\n\r\nfunction getBusArrival(busStopCode: string, res: Response) {\r\n  busStopCode = busStopCode.trim();\r\n  if (!busStopCode) {\r\n    return res.status(400).send('Invalid BusStopCode.');\r\n  }\r\n\r\n  let busStopInfo = checkBusStopLocally(busStopCode);\r\n  if (!busStopInfo) {\r\n    return res.status(400).send('Bus Stop not found.');\r\n  }\r\n\r\n  let url = `${busArrivalUrl}?BusStopCode=${busStopCode}`;\r\n  Axios.get(url, headerConfig)\r\n    .then(respose => {\r\n      res\r\n        .status(200)\r\n        .send({ busStopInfo: busStopInfo, busArrival: respose.data });\r\n    })\r\n    .catch(e => {\r\n      res.status(400).send(e);\r\n    });\r\n}\r\n\r\nexport default getBusArrival;\r\n","import { Router } from 'express';\r\n\r\nimport { Request, Response } from '../interface';\r\nimport { Delete, Get, Post, Put } from './http-request';\r\n\r\nconst httpRouter = Router();\r\n\r\nhttpRouter.post('', (req: Request, res: Response) => {\r\n  if (req.body.type === 'DELETE') {\r\n    Delete(req.body, res);\r\n  } else if (req.body.type === 'GET') {\r\n    Get(req.body, res);\r\n  } else if (req.body.type === 'POST') {\r\n    Post(req.body, res);\r\n  } else if (req.body.type === 'PUT') {\r\n    Put(req.body, res);\r\n  }\r\n});\r\n\r\nexport default httpRouter;\r\n","import Axios from 'axios';\r\n\r\nimport { Request, Response } from '../interface';\r\n\r\nfunction Delete(body: any, res: Response) {\r\n  let url = body.url;\r\n  if (body.querys && body.querys.length > 0) {\r\n    url += '?';\r\n    for (let i = 0; i < body.querys.length; ++i) {\r\n      url += body.query[i];\r\n      url += '=';\r\n      url += body.queryValue[i];\r\n    }\r\n  }\r\n  Axios.delete(url)\r\n    .then(response => {\r\n      res.status(200).send(response);\r\n    })\r\n    .catch(e => {\r\n      res.status(400).send(e);\r\n    });\r\n}\r\nfunction Post(req: Request, res: Response) {\r\n  let headers = {};\r\n\r\n  return res.status(200).send(req);\r\n  let url: string = req.body.url;\r\n  if (req.body.headers) {\r\n    headers = {\r\n      headers: req.body.headers\r\n    };\r\n  }\r\n  if (req.body.parameters) {\r\n    url += '?';\r\n    for (let i = 0; i < req.body.parameters.length; ++i) {\r\n      url += req.body.parameters[i] + '=' + req.body.parameterValue[i] + '&';\r\n    }\r\n  }\r\n  Axios.get(url, headers).then(response => {\r\n    res.send(response.data);\r\n  });\r\n}\r\nfunction Put(req: Request, res: Response) {\r\n  Axios.put(req.body.url).then(response => {\r\n    res.send(response.data);\r\n  });\r\n}\r\nfunction Get(req: Request, res: Response) {\r\n  Axios.post(req.body.url).then(response => {\r\n    res.send(response.data);\r\n  });\r\n}\r\n\r\nexport { Delete, Get, Post, Put };\r\n","import { Router } from 'express';\r\n\r\nimport { Request, Response } from '../interface';\r\nimport CheckOxfordEntries from './dictionary';\r\nimport { AddPal, DeletePal, GetPals, GetPalsAttendance } from './lunchfun-pals';\r\nimport { AddRecord, DeleteRecord, GetRecords } from './lunchfun-records';\r\n\r\nconst dictionaryRouter = Router();\r\nconst lunchfunRouter = Router();\r\n\r\ndictionaryRouter.get('/oxford/:word', (req: Request, res: Response) => {\r\n  CheckOxfordEntries(req.params.word, res);\r\n});\r\n\r\nlunchfunRouter.get('/pals', (req: Request, res: Response) => {\r\n  GetPals(res);\r\n});\r\nlunchfunRouter.post('/pal', (req: Request, res: Response) => {\r\n  AddPal(req.body.name, res);\r\n});\r\nlunchfunRouter.delete('/pal', (req: Request, res: Response) => {\r\n  DeletePal(req.query, res);\r\n});\r\n\r\nlunchfunRouter.get('/records', (req: Request, res: Response) => {\r\n  GetRecords(res);\r\n});\r\nlunchfunRouter.post('/record', (req: Request, res: Response) => {\r\n  AddRecord(req.body.payer, req.body.attendees, res);\r\n});\r\nlunchfunRouter.delete('/record', (req: Request, res: Response) => {\r\n  DeleteRecord(req.query._id, res);\r\n});\r\n\r\nlunchfunRouter.get('/stats/attendance', (req: Request, res: Response) => {\r\n  GetPalsAttendance(res);\r\n});\r\n\r\nexport { dictionaryRouter, lunchfunRouter };\r\n","import Axios from 'axios';\r\nimport { Response } from '../interface';\r\nimport {\r\n  CheckEntriesResult,\r\n  OxfordEntries,\r\n  OxfordLemmas\r\n} from './oxford-interface';\r\n\r\nconst app_id: string = '0314e9e2';\r\nconst app_key: string = '5a6c2589474a2f83ccd69f397bfec7a2';\r\nconst config = {\r\n  headers: {\r\n    app_id: app_id,\r\n    app_key: app_key\r\n  }\r\n};\r\n\r\nasync function CheckOxfordEntries(word: string, res: Response) {\r\n  if (!word || !word.trim()) {\r\n    return res.status(400).send('Invalid word.');\r\n  }\r\n  word = word.trim().toLowerCase();\r\n\r\n  const url =\r\n    'https://od-api.oxforddictionaries.com/api/v2/entries/en-gb/' +\r\n    word +\r\n    '?fields=definitions%2Cpronunciations';\r\n\r\n  try {\r\n    let resp = await Axios(url, config);\r\n    let entries: OxfordEntries = resp.data;\r\n    let return_result: CheckEntriesResult = { lexicalEntries: [] };\r\n    for (let result of entries.results) {\r\n      for (let lexicalEntry of result.lexicalEntries) {\r\n        let new_lexicalEntry = {\r\n          entries: [],\r\n          lexicalCategory: '',\r\n          pronunciations: []\r\n        };\r\n        return_result.lexicalEntries.push(new_lexicalEntry);\r\n\r\n        if (lexicalEntry.lexicalCategory) {\r\n          new_lexicalEntry.lexicalCategory = lexicalEntry.lexicalCategory.text;\r\n        }\r\n        for (let entry of lexicalEntry.entries) {\r\n          for (let sense of entry.senses) {\r\n            for (let definition of sense.definitions) {\r\n              new_lexicalEntry.entries.push(definition);\r\n            }\r\n\r\n            for (let subsense of sense.subsenses || []) {\r\n              for (let definition of subsense.definitions) {\r\n                new_lexicalEntry.entries.push(definition);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        for (let pronunciation of lexicalEntry.pronunciations) {\r\n          new_lexicalEntry.pronunciations.push({\r\n            audioFile: pronunciation.audioFile,\r\n            phoneticSpelling: pronunciation.phoneticSpelling\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return res.status(200).send(return_result);\r\n  } catch (e) {\r\n    return res.status(400).send(e.message);\r\n  }\r\n}\r\n\r\nasync function CheckOxfordLemmas(word: string) {\r\n  if (!word || !word.trim()) {\r\n    return 'Invalid word.';\r\n  }\r\n  const url =\r\n    'https://od-api.oxforddictionaries.com/api/v2/lemmas/en-gb/' + word;\r\n\r\n  try {\r\n    let resp = await Axios(url, config);\r\n    const lemmas: OxfordLemmas = resp.data;\r\n    let return_result = [];\r\n    lemmas.results.forEach(result => {\r\n      result.lexicalEntries.forEach(lexicalEntry => {\r\n        lexicalEntry.inflectionOf.forEach(inflection => {\r\n          return_result.push(inflection);\r\n        });\r\n      });\r\n    });\r\n    return return_result;\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\n\r\nCheckOxfordLemmas('shops');\r\n\r\nexport default CheckOxfordEntries;\r\n","import { Response } from '../interface';\r\nimport { DbCollection } from '../mongodb-ops';\r\n\r\nlet lunchPals = [];\r\n\r\nasync function refreshPals() {\r\n  try {\r\n    const palsCollection = await DbCollection('lunchfun-pals');\r\n    lunchPals = await palsCollection\r\n      .find()\r\n      .sort({ name: 1 })\r\n      .toArray();\r\n  } catch (e) {\r\n    throw e;\r\n  }\r\n}\r\n\r\nasync function GetPals(res: Response) {\r\n  if (lunchPals.length > 0) {\r\n    return res.status(200).send(lunchPals);\r\n  }\r\n\r\n  try {\r\n    await refreshPals();\r\n    return res.status(200).send(lunchPals);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function AddPal(name: string, res: Response) {\r\n  if (!name) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n\r\n  try {\r\n    const palsCollection = await DbCollection('lunchfun-pals');\r\n    palsCollection.insertOne({ name: name });\r\n    refreshPals();\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function DeletePal(name: string, res: Response) {\r\n  if (!name) {\r\n    return res.status(400).send('Invalid name to delete.');\r\n  }\r\n\r\n  try {\r\n    const palsCollection = await DbCollection('lunchfun-pals');\r\n    palsCollection.deleteOne({ name: name });\r\n    refreshPals();\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function GetPalsAttendance(res: Response) {\r\n  try {\r\n    const collection = await DbCollection('lunchfun-records');\r\n    const attendances = await collection\r\n      .aggregate([\r\n        { $unwind: '$attendees' },\r\n        { $group: { _id: '$attendees', attendance: { $sum: 1 } } },\r\n        { $project: { name: '$_id', attendance: '$attendance' } }\r\n      ])\r\n      .toArray();\r\n    return res.status(200).send(attendances);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nexport { AddPal, DeletePal, GetPals, GetPalsAttendance };\r\n","module.exports = require(\"mongodb\");","import { Response } from '../interface';\r\nimport { DbCollection, ObjectID } from '../mongodb-ops';\r\n\r\nasync function GetRecords(res: Response, qty?: number) {\r\n  try {\r\n    const collection = await DbCollection('lunchfun-records');\r\n    const records = await collection\r\n      .find({})\r\n      .sort({ createdOn: -1 })\r\n      .limit(qty | 30)\r\n      .toArray();\r\n    return res.status(200).send(records);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function AddRecord(payer: string, attendees: string[], res: Response) {\r\n  if (!payer || !attendees || attendees.length <= 0) {\r\n    return res.status(400).send('Invalid params to add.');\r\n  }\r\n\r\n  try {\r\n    const collection = await DbCollection('lunchfun-records');\r\n    await collection.insertOne({\r\n      payer: payer,\r\n      attendees: attendees,\r\n      createdOn: new Date()\r\n    });\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    // console.log(e);\r\n    return res.status(500).send('Error at server. Please try again later.');\r\n  }\r\n}\r\n\r\nasync function DeleteRecord(_id: string, res: Response) {\r\n  if (!_id) {\r\n    return res.status(400).send('Invalid record to delete.');\r\n  }\r\n\r\n  try {\r\n    const collection = await DbCollection('lunchfun-records');\r\n    collection.deleteOne({ _id: new ObjectID(_id) });\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nexport { AddRecord, DeleteRecord, GetRecords };\r\n","import { Router } from 'express';\r\n\r\nimport giftsProductsRouter from './gifts-products/gifts-products-router';\r\nimport giftsOrdersRouter from './gifts-orders/gifts-orders-router';\r\nimport giftsUsersRouter from './gifts-users/gifts-users-router';\r\nimport giftsStaffsRouter from './gifts-staffs/gifts-staffs-router';\r\n\r\nconst giftsRouter = Router();\r\n\r\n// url: /api/gifts\r\ngiftsRouter.use('/products', giftsProductsRouter);\r\ngiftsRouter.use('/orders', giftsOrdersRouter);\r\ngiftsRouter.use('/users', giftsUsersRouter);\r\ngiftsRouter.use('/staffs', giftsStaffsRouter);\r\n\r\nexport default giftsRouter;\r\n","import { Router } from 'express';\r\n\r\nimport { Request, Response } from '../interface';\r\nimport {\r\n  AddCategory,\r\n  DeleteCategory,\r\n  GetCategories,\r\n  GetSamplesOfCategories\r\n} from './gifts-products-categories.ops';\r\nimport {\r\n  AddProduct,\r\n  DeleteProduct,\r\n  GetProduct,\r\n  GetProductsByCategory,\r\n  UpdateProduct\r\n} from './gifts-products.ops';\r\nimport { AdjustInventory, GetInventory } from './gifts-products-inventory.ops';\r\n\r\nconst giftsProductsRouter = Router();\r\n\r\ngiftsProductsRouter.get('/view/:product_no', (req, res) => {\r\n  GetProduct(req.params, res);\r\n});\r\n\r\n/*\r\n * inquiry: /api/gifts/products\r\n */\r\ngiftsProductsRouter.get('/categories', (req: Request, res: Response) => {\r\n  GetCategories(res);\r\n});\r\ngiftsProductsRouter.post('/category', (req: Request, res: Response) => {\r\n  AddCategory(req.body, res);\r\n});\r\ngiftsProductsRouter.delete('/category', (req: Request, res: Response) => {\r\n  DeleteCategory(req.query, res);\r\n});\r\n\r\ngiftsProductsRouter.get('/samples', (req: Request, res: Response) => {\r\n  GetSamplesOfCategories(res);\r\n});\r\ngiftsProductsRouter.get('', (req: Request, res: Response) => {\r\n  GetProductsByCategory(req, res);\r\n});\r\ngiftsProductsRouter.get('/product', (req: Request, res: Response) => {\r\n  GetProduct(req.query, res);\r\n});\r\ngiftsProductsRouter.post('/product', (req: Request, res: Response) => {\r\n  AddProduct(req.body, res);\r\n});\r\ngiftsProductsRouter.put('/product', (req: Request, res: Response) => {\r\n  UpdateProduct(req.body, res);\r\n});\r\ngiftsProductsRouter.delete('/product', (req: Request, res: Response) => {\r\n  DeleteProduct(req.query, res);\r\n});\r\n\r\ngiftsProductsRouter.get('/inventory', (req, res) => {\r\n  GetInventory(res);\r\n});\r\ngiftsProductsRouter.put('/inventory', (req, res) => {\r\n  AdjustInventory(req.body._id, req.body.qty, res);\r\n});\r\n\r\nexport default giftsProductsRouter;\r\n","import { Response } from '../interface';\r\nimport { ObjectID, DbCollection } from '../mongodb-ops';\r\n\r\nlet globalCategories = [];\r\nlet globalSamplesOfCategories = [];\r\n\r\nasync function GetCategories(res: Response) {\r\n  try {\r\n    const categories = await GetCategoriesByLevel(0);\r\n    return res.status(200).send(categories);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function GetSamplesOfCategories(res: Response) {\r\n  if (globalSamplesOfCategories.length > 0) {\r\n    return res.status(200).send(globalSamplesOfCategories);\r\n  }\r\n  try {\r\n    globalSamplesOfCategories = await GetSamples();\r\n    return res.status(200).send(globalSamplesOfCategories);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function AddCategory(body: any, res: Response) {\r\n  if (!body.name || !body.category) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n\r\n  try {\r\n    const dbCollection = await DbCollection('gifts-products-catalog');\r\n    await dbCollection.insertOne({ name: body.name, category: body.category });\r\n    globalCategories = [];\r\n    globalSamplesOfCategories = [];\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function DeleteCategory(query: any, res: Response) {\r\n  if (!query._id) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n\r\n  try {\r\n    const dbCollection = await DbCollection('gifts-products-catalog');\r\n    await dbCollection.deleteOne({ _id: new ObjectID(query._id) });\r\n    globalCategories = [];\r\n    globalSamplesOfCategories = [];\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\n// @level:\r\n// 0 - all;  1 - 1st level;  2 - 2nd and above levels\r\nasync function GetCategoriesByLevel(level: number) {\r\n  if (globalCategories.length <= 0) {\r\n    try {\r\n      globalCategories = await GetCategoriesFromDb();\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  if (level === 0) {\r\n    return globalCategories;\r\n  }\r\n  const returnCategories = [];\r\n  globalCategories.forEach(cat => {\r\n    console.log(cat.category.match(new RegExp('/', 'g')));\r\n    if (cat.category.match(new RegExp('/', 'g')).length <= level) {\r\n      returnCategories.push(cat);\r\n    }\r\n  });\r\n  return returnCategories;\r\n}\r\n\r\nasync function GetCategoriesFromDb() {\r\n  try {\r\n    const dbCollection = await DbCollection('gifts-products-catalog');\r\n    globalCategories = await dbCollection\r\n      .find()\r\n      .sort('category', 1)\r\n      .toArray();\r\n    return globalCategories;\r\n  } catch (e) {\r\n    throw { errMsg: 'Get categories from database failed.' };\r\n  }\r\n}\r\n\r\nasync function GetSamples() {\r\n  try {\r\n    const dbCollection = await DbCollection('gifts-products');\r\n    let docs = null;\r\n    docs = await dbCollection\r\n      .aggregate([\r\n        { $sort: { _id: -1 } },\r\n        {\r\n          $group: {\r\n            _id: { category: '$category' },\r\n            products: {\r\n              $push: {\r\n                _id: '$_id',\r\n                category: '$category',\r\n                img: '$img'\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          $project: {\r\n            _id: '$_id',\r\n            products: {\r\n              $slice: [\r\n                '$products',\r\n                4 // max number of elements returned from the start of the array\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      ])\r\n      .toArray();\r\n    return docs;\r\n  } catch (e) {\r\n    console.log(e);\r\n    return { errMsg: 'Get products failed.' };\r\n  }\r\n}\r\n\r\nexport { AddCategory, DeleteCategory, GetCategories, GetSamplesOfCategories };\r\n","import { DbCollection, MongoDb, ObjectID } from '../mongodb-ops';\r\nimport { Request, Response } from '../interface';\r\n\r\nasync function GetProduct(params: any, res: Response) {\r\n  if (!params._id) {\r\n    return res.status(400).send('Invalid product no.');\r\n  }\r\n\r\n  try {\r\n    const db = await MongoDb();\r\n    const product = await db\r\n      .collection('gifts-products')\r\n      .findOne({ _id: new ObjectID(params._id) });\r\n    return res.status(200).send(product);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function GetProductsByCategory(req: Request, res: Response) {\r\n  try {\r\n    const dbCollection = await DbCollection('gifts-products');\r\n    let docs = null;\r\n    if (req.query.category) {\r\n      const regex = new RegExp(['^', req.query.category.trim()].join(''), 'i');\r\n      docs = await dbCollection.find({ category: regex }).toArray();\r\n    } else {\r\n      docs = await dbCollection.find().toArray();\r\n    }\r\n    return res.status(200).send(docs);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function AddProduct(body: any, res: Response) {\r\n  if (!body.name) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n\r\n  try {\r\n    const db = await MongoDb();\r\n    await db.collection('gifts-products').insertOne({\r\n      name: body.name,\r\n      img: body.img,\r\n      price: body.price,\r\n      category: body.category,\r\n      color: body.color,\r\n      packaging: body.packaging,\r\n      material: body.material,\r\n      size: body.size,\r\n      note: body.note,\r\n      retailer: body.retailer,\r\n      createdOn: new Date()\r\n    });\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function UpdateProduct(body: any, res: Response) {\r\n  if (!body._id) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n\r\n  try {\r\n    const dbProducts = await DbCollection('gifts-products');\r\n    await dbProducts.updateOne(\r\n      { _id: new ObjectID(body._id) },\r\n      {\r\n        $set: {\r\n          modifiedOn: new Date(),\r\n          name: body.name,\r\n          img: body.img,\r\n          price: body.price,\r\n          category: body.category,\r\n          color: body.color,\r\n          packaging: body.packaging,\r\n          material: body.material,\r\n          size: body.size,\r\n          note: body.note,\r\n          retailer: body.retailer\r\n        }\r\n      }\r\n    );\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function DeleteProduct(query: any, res: Response) {\r\n  if (!query._id) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n\r\n  try {\r\n    const db = await MongoDb();\r\n    await db\r\n      .collection('gifts-products')\r\n      .deleteOne({ _id: new ObjectID(query._id) });\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nexport {\r\n  AddProduct,\r\n  DeleteProduct,\r\n  GetProductsByCategory,\r\n  GetProduct,\r\n  UpdateProduct\r\n};\r\n","import { Router } from 'express';\r\n\r\nimport { Request, Response } from '../interface';\r\n\r\nconst giftsOrdersRouter = Router();\r\n\r\n// order list with order_no, status & staff id to follow-up.\r\ngiftsOrdersRouter.get('/allOrders', (req: Request, res: Response) => {\r\n  if (!req.session || !req.session.staff) {\r\n    return res.sendStatus(401);\r\n  }\r\n  return res.status(200).send({ result: 'ok' });\r\n});\r\n\r\n// update order status by staff follow-up.\r\ngiftsOrdersRouter.put('/updateStatus', (req: Request, res: Response) => {\r\n  if (!req.session || !req.session.staff.id) {\r\n    return res.sendStatus(401);\r\n  }\r\n  if (!req.body.new_status || !req.body.sno || !req.body.order_no) {\r\n    return res.status(400).send('Failed. Pleaes review inputs.');\r\n  }\r\n\r\n  const param = {\r\n    1: req.body.order_no,\r\n    2: req.body.sno,\r\n    3: Date.now(),\r\n    4: req.session.staff.id,\r\n    5: req.body.new_status,\r\n    6: req.body.note || null\r\n  };\r\n  return res.status(200).send({ result: 'ok' });\r\n});\r\n\r\n// staff to update contact info of the order.\r\ngiftsOrdersRouter.put('/updateContact', (req: Request, res: Response) => {\r\n  if (!req.session || !req.session.staff.id) {\r\n    return res.sendStatus(401);\r\n  }\r\n  if (!req.body.order_no) {\r\n    return res.status(400).send('Order_no empty.');\r\n  } else if (\r\n    !req.body.email ||\r\n    !req.body.email.includes('@') ||\r\n    !req.body.email.includes('.') ||\r\n    req.body.email.includes('/') ||\r\n    req.body.email.includes('\\\\')\r\n  ) {\r\n    return res.status(400).send('Invalid email.');\r\n  } else if (!req.body.name) {\r\n    return res.status(400).send('Invalid name.');\r\n  }\r\n\r\n  const param = {\r\n    1: req.body.name,\r\n    2: req.body.email,\r\n    3: req.body.mobile || null,\r\n    4: req.body.company || null,\r\n    5: req.body.mobile2 || null,\r\n    6: req.body.addr || null,\r\n    7: req.body.order_no\r\n  };\r\n  return res.status(200).send({ result: 'ok' });\r\n});\r\n\r\n// staff to change order details e.g. price, qty, in case users changed mind.\r\n// staff may change status of specific product of the order.\r\ngiftsOrdersRouter.put('/updateOrderItem', (req: Request, res: Response) => {\r\n  if (!req.session || !req.session.staff.id) {\r\n    return res.sendStatus(401);\r\n  }\r\n\r\n  if (!req.body.order_no) {\r\n    return res.status(400).send('Failed. Invalid Order No.');\r\n  }\r\n  if (!req.body.sno || req.body.sno === '') {\r\n    return res.status(400).send('Failed. Invalid Order Sno.');\r\n  }\r\n\r\n  const param = {\r\n    1: req.body.new_sale_price,\r\n    2: req.body.new_qty,\r\n    3: req.body.new_status,\r\n    4: req.body.order_no,\r\n    5: req.body.sno\r\n  };\r\n  return res.status(200).send({ result: 'ok' });\r\n});\r\n\r\nexport default giftsOrdersRouter;\r\n","import { Router } from 'express';\r\n\r\nimport { Request, Response } from '../interface';\r\nimport {\r\n  Login,\r\n  Logout,\r\n  Register,\r\n  DeleteUser,\r\n  UserInfo\r\n} from './gifts-users.ops';\r\nimport {\r\n  AddToCart,\r\n  CartCheckout,\r\n  DeleteCart,\r\n  DeleteInCart,\r\n  GetCart,\r\n  UpdateCartQty\r\n} from './gifts-carts.ops';\r\n\r\nconst giftsUsersRouter = Router();\r\n\r\n// url: /api/gifts/users/\r\ngiftsUsersRouter.post('/login', (req: Request, res: Response) => {\r\n  Login(req, res);\r\n});\r\ngiftsUsersRouter.get('/info', (req: Request, res: Response) => {\r\n  UserInfo(req.session, res);\r\n});\r\ngiftsUsersRouter.get('/logout', (req: Request, res: Response) => {\r\n  Logout(req, res);\r\n});\r\ngiftsUsersRouter.post('/register', (req: Request, res: Response) => {\r\n  Register(req, res);\r\n});\r\ngiftsUsersRouter.delete('/deleteuser', (req: Request, res: Response) => {\r\n  DeleteUser(req.session, res);\r\n});\r\ngiftsUsersRouter.get('/cart', (req: Request, res: Response) => {\r\n  GetCart(req.session, res);\r\n});\r\ngiftsUsersRouter.post('/cart', (req: Request, res: Response) => {\r\n  AddToCart(req.session, req.body, res);\r\n});\r\ngiftsUsersRouter.delete('/cart', (req: Request, res: Response) => {\r\n  DeleteCart(req.session, res);\r\n});\r\ngiftsUsersRouter.put('/cart', (req: Request, res: Response) => {\r\n  UpdateCartQty(req, res);\r\n});\r\ngiftsUsersRouter.delete('/cart/product', (req: Request, res: Response) => {\r\n  DeleteInCart(req.session, req.query._id, res);\r\n});\r\ngiftsUsersRouter.post('/cart/checkout', (req: Request, res: Response) => {\r\n  CartCheckout(req, res);\r\n});\r\n\r\nexport default giftsUsersRouter;\r\n","module.exports = require(\"crypto\");","import { DbCollection, MongoDb, ObjectID } from '../mongodb-ops';\r\nimport { Request, Response } from '../interface';\r\nimport { randomString } from '../string-ops';\r\n\r\nimport { bLogin } from './gifts-users.ops';\r\nimport { CartItem } from './users-interface';\r\nimport {\r\n  DeleteInventoryReservation,\r\n  ReserveInventory\r\n} from '../gifts-products/gifts-products-inventory.ops';\r\nimport { NewOrder } from '../gifts-orders/gifts-orders.ops';\r\n\r\nasync function GetCart(session: any, res: Response) {\r\n  if (!bLogin(session)) {\r\n    return res.status(403).send('User not login');\r\n  }\r\n\r\n  try {\r\n    const db = await DbCollection('gifts-carts');\r\n    const cart = await db.findOne({ _id: new ObjectID(session.user._id) });\r\n    console.log(cart);\r\n    return res.status(200).send(cart);\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function AddToCart(session: any, body: any, res: Response) {\r\n  if (!bLogin(session)) {\r\n    return res.status(403).send('User not login');\r\n  }\r\n\r\n  try {\r\n    const db = await DbCollection('gifts-carts');\r\n    let rslt = await db.updateOne(\r\n      { _id: new ObjectID(session.user._id) },\r\n      { $pull: { products: { productId: new ObjectID(body.product._id) } } }\r\n    );\r\n    rslt = await db.updateOne(\r\n      { _id: new ObjectID(session.user._id) },\r\n      {\r\n        $push: {\r\n          products: {\r\n            productId: new ObjectID(body.product._id),\r\n            quantity: body.qty,\r\n            name: body.product.name,\r\n            price: body.product.price\r\n          }\r\n        }\r\n      },\r\n      { upsert: true }\r\n    );\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function UpdateCartQty(req: Request, res: Response) {\r\n  if (!bLogin(req.session)) {\r\n    res.status(403).send('User not login.');\r\n  }\r\n  if (!req.body.productId || !req.body.qty) {\r\n    return res.status(400).send('Invalid input.');\r\n  }\r\n\r\n  try {\r\n    const db = await MongoDb();\r\n    const rslt = await db.collection('gifts-carts').updateOne(\r\n      {\r\n        _id: req.session.user._id,\r\n        'products.productId': req.body.productId\r\n      },\r\n      {\r\n        $set: {\r\n          'products.$.qty': req.body.qty,\r\n          modifiedOn: new Date()\r\n        }\r\n      }\r\n    );\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function DeleteCart(session: any, res: Response) {\r\n  if (!bLogin(session)) {\r\n    return res.status(400).send('User not login.');\r\n  }\r\n\r\n  try {\r\n    const db = await DbCollection('gifts-carts');\r\n    db.deleteOne({ _id: new ObjectID(session.user._id) });\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function DeleteInCart(session: any, _id: string, res: Response) {\r\n  if (!bLogin(session)) {\r\n    return res.status(400).send('User not login.');\r\n  }\r\n\r\n  try {\r\n    const db = await DbCollection('gifts-carts');\r\n    let rslt = await db.updateOne(\r\n      { _id: new ObjectID(session.user._id) },\r\n      { $pull: { products: { productId: new ObjectID(_id) } } }\r\n    );\r\n    return res.status(200).send({ result: 'ok' });\r\n  } catch (e) {\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nasync function CartCheckout(req: Request, res: Response) {\r\n  if (\r\n    !req.body.cart ||\r\n    !req.body.cart.customer ||\r\n    !req.body.cart.customer.name ||\r\n    !req.body.cart.customer.mobile ||\r\n    !req.body.cart.customer.address\r\n  ) {\r\n    return res.status(400).send('Invalid customer information.');\r\n  }\r\n  if (req.body.cart.total <= 0) {\r\n    return res.status(400).send('No product to checkout.');\r\n  }\r\n\r\n  let bMember: boolean = bLogin(req.session);\r\n\r\n  let id = '';\r\n  if (bMember) {\r\n    id = req.session.user._id;\r\n  } else {\r\n    id = randomString(20);\r\n  }\r\n  const cartItems: CartItem[] = req.body.cart.cartItems;\r\n  const customer = req.body.cart.customer;\r\n\r\n  try {\r\n    // reserve inventory, it throw error in case of failure.\r\n    await ReserveInventory(id, cartItems);\r\n\r\n    let insertRslt = await NewOrder(customer, cartItems);\r\n    if (insertRslt.result.n <= 0) {\r\n      await DeleteInventoryReservation(id);\r\n      throw 'Create new order failed.';\r\n    }\r\n\r\n    let updateRslt = await DeleteInventoryReservation(id);\r\n    console.log(updateRslt);\r\n\r\n    if (bMember) {\r\n      const dbCarts = await DbCollection('gifts-carts');\r\n      let deleteRslt = await dbCarts.deleteOne({ _id: new ObjectID(id) });\r\n    }\r\n\r\n    return res.status(200).send({ orderId: id });\r\n  } catch (e) {\r\n    console.error(e);\r\n    return res.status(500).send(e);\r\n  }\r\n}\r\n\r\nexport {\r\n  AddToCart,\r\n  CartCheckout,\r\n  DeleteCart,\r\n  DeleteInCart,\r\n  GetCart,\r\n  UpdateCartQty\r\n};\r\n","import { Request, Response } from '../interface';\r\nimport { DbCollection, ObjectID } from '../mongodb-ops';\r\nimport { bLogin } from '../gifts-users/gifts-users.ops';\r\nimport { CartItem } from '../gifts-users/users-interface';\r\n\r\nasync function NewOrder(customer, cartItems: CartItem[]) {\r\n  try {\r\n    const dbOrders = await DbCollection('gifts-orders');\r\n    let insertRslt = dbOrders.insertOne({\r\n      created_on: new Date(),\r\n      shipping: {\r\n        name: customer.name,\r\n        mobile: customer.mobile,\r\n        address: customer.address,\r\n        message: customer.message\r\n      },\r\n      payment: { method: 'visa', transaction_id: '2312213312XXXTD' },\r\n      cartItems: cartItems\r\n    });\r\n    console.log('insertRslt: ', insertRslt);\r\n    return insertRslt;\r\n  } catch (e) {\r\n    throw 'create new order failed.';\r\n  }\r\n}\r\n// async function GetCart(req: Request, res: Response) {\r\n//   if (!bLogin(req.session)) {\r\n//     return res.status(403).send('User not login');\r\n//   }\r\n\r\n//   try {\r\n//     const db = await MongoDb();\r\n//     let cart = await db\r\n//       .collection('gifts-carts')\r\n//       .find({ _id: req.session.user[0]._id })\r\n//       .toArray();\r\n\r\n//     return res.status(200).send(cart);\r\n//   } catch (e) {\r\n//     return res.status(500).send(e);\r\n//   }\r\n// }\r\n\r\n// async function UpdateCartQty(req: Request, res: Response) {\r\n//   if (!bLogin(req.session)) {\r\n//     res.status(403).send('User not login.');\r\n//   }\r\n//   if (!req.body.productId || !req.body.quantity) {\r\n//     return res.status(400).send('Invalid input.');\r\n//   }\r\n\r\n//   try {\r\n//     const db = await MongoDb();\r\n//     let rslt = await db.collection('gifts-carts').updateOne(\r\n//       {\r\n//         _id: req.session.user[0]._id,\r\n//         'products.productId': req.body.productId\r\n//       },\r\n//       {\r\n//         $set: {\r\n//           'products.$.quantity': req.body.quantity,\r\n//           modifiedOn: new Date()\r\n//         }\r\n//       }\r\n//     );\r\n//     console.log(rslt);\r\n//     return res.sendStatus(200);\r\n//   } catch (e) {\r\n//     return res.status(500).send(e);\r\n//   }\r\n// }\r\n\r\n// async function DeleteCart(req: Request, res: Response) {\r\n//   if (!bLogin(req.session)) {\r\n//     return res.status(400).send('User not login.');\r\n//   }\r\n\r\n//   try {\r\n//     const db = await MongoDb();\r\n//     await db\r\n//       .collection('gifts-carts')\r\n//       .deleteOne({ _id: req.session.user[0]._id });\r\n//     return res.sendStatus(200);\r\n//   } catch (e) {\r\n//     return res.status(500).send(e);\r\n//   }\r\n// }\r\n\r\n// async function DeleteCartProduct(req: Request, res: Response) {\r\n//   if (!bLogin(req.session)) {\r\n//     return res.status(400).send('User not login.');\r\n//   }\r\n\r\n//   try {\r\n//     const db = await MongoDb();\r\n//     await db.collection('gifts-carts').updateOne(\r\n//       { _id: req.session.user[0]._id },\r\n//       {\r\n//         $set: { modifiedOn: new Date() },\r\n//         $pull: {\r\n//           products: {\r\n//             productId: req.body.productId,\r\n//             quantity: req.body.quantity\r\n//           }\r\n//         }\r\n//       }\r\n//     );\r\n//     return res.sendStatus(200);\r\n//   } catch (e) {\r\n//     return res.status(500).send(e);\r\n//   }\r\n// }\r\n\r\n// async function CartCheckout(req: Request, res: Response) {\r\n//   if (!bLogin(req.session)) {\r\n//     return res.status(400).send('User not login.');\r\n//   }\r\n\r\n//   try {\r\n//     const db = await MongoDb();\r\n//     await db.collection('gifts-carts').updateOne(\r\n//       { _id: req.session.user[0]._id },\r\n//       {\r\n//         $set: { modifiedOn: new Date() },\r\n//         $pull: {\r\n//           products: {\r\n//             productId: req.body.productId,\r\n//             quantity: req.body.quantity\r\n//           }\r\n//         }\r\n//       }\r\n//     );\r\n//     return res.sendStatus(200);\r\n//   } catch (e) {\r\n//     return res.status(500).send(e);\r\n//   }\r\n// }\r\n\r\n// export { DeleteCart, DeleteCartProduct, GetCart, UpdateCartQty };\r\nexport { NewOrder };\r\n","import { Router } from 'express';\r\n\r\nimport { Request, Response } from '../interface';\r\n\r\nconst giftsStaffsRouter = Router();\r\n\r\ngiftsStaffsRouter.post('/login', (req: Request, res: Response) => {\r\n  // Login(req, res);\r\n});\r\ngiftsStaffsRouter.get('/logout', (req: Request, res: Response) => {\r\n  // Logout(req, res);\r\n});\r\ngiftsStaffsRouter.post('/register', (req: Request, res: Response) => {\r\n  // Register(req, res);\r\n});\r\ngiftsStaffsRouter.delete('/deleteuser', (req: Request, res: Response) => {\r\n  // DeleteUser(req, res);\r\n});\r\n\r\nexport default giftsStaffsRouter;\r\n","import { createTransport } from 'nodemailer';\r\n\r\nimport { Response } from '../interface';\r\n\r\nconst transporter = createTransport({\r\n  host: 'mail.insg.xyz',\r\n  secure: true,\r\n  auth: {\r\n    user: 'i@insg.xyz',\r\n    pass: 'pass1234'\r\n  }\r\n});\r\n\r\nconst mailOptions = {\r\n  from: 'i@insg.xyz',\r\n  to: 'seesea2@gmail.com',\r\n  subject: 'Hello',\r\n  text: 'This is email from InSG.xyz',\r\n  html: '<b>this is email from InSG.xyz</b>'\r\n};\r\n\r\nfunction SendEmail(body: any, res: Response) {\r\n  // const emailHtml: string =\r\n  //   '<!DOCTYPE html><head>' +\r\n  //   '<meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\"></head>' +\r\n  //   `<body><br><b>Message from User ${body.name}` +\r\n  //   ' :</b><br><br>' +\r\n  //   `<p><b>Email: </b> ${body.email}` +\r\n  //   '</p>' +\r\n  //   `<p><b>Mobile: </b> ${body.mobile}` +\r\n  //   '</p>' +\r\n  //   `<p><b>Message: </b> ${body.message}` +\r\n  //   '</p>' +\r\n  //   '</body></html>';\r\n\r\n  // mailOptions.subject = 'User Inquiry';\r\n  // mailOptions.html = emailHtml;\r\n  transporter.sendMail(mailOptions);\r\n  // return res.status(200).send({ result: 'ok' });\r\n}\r\n\r\nSendEmail(null, null);\r\n\r\nexport default SendEmail;\r\n","module.exports = require(\"nodemailer\");"],"sourceRoot":""}